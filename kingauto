#!/system/bin/sh
# KTSR by pedro (pedrozzz0 @ GitHub)
# If you wanna use it as part of your project, please maintain the credits to it respective's author(s).

MODPATH=/data/adb/modules/KTSR

# Load libraries
. "$MODPATH"/libs/libktsr.sh

# Calc 80% of the total amount of the total device RAM
full_ram=$((total_ram * 20 / 100))

toptsdir=/dev/stune/top-app/tasks

toptcdir=/dev/cpuset/top-app/tasks

# Get screen state (ON | OFF)
get_scrn_state(){
	scrn_state=$(dumpsys power | grep state=O | cut -d "=" -f 2)
	if [[ "$scrn_state" == "ON" ]]; then 
	    scrn_on=1
	else 
	    scrn_on=0
	fi
	}

(
while true; do
# This script basically check if packages PIDs is found on stune / cpuset top-app
for gpid in $(pgrep netease) $(pgrep tipsworks) $(pgrep studiowildcard) $(pgrep wardrumstudios) $(pgrep ExiliumGames) $(pgrep com2us) $(pgrep zuuks) $(pgrep junegaming) $(pgrep pixelbite) $(pgrep junesoftware) $(pgrep sozap) $(pgrep dotemu) $(pgrep playables) $(pgrep playrisedigital) $(pgrep rockstar) $(pgrep blackpanther) $(pgrep noodlecake) $(pgrep linegames) $(pgrep kleientertainment) $(pgrep agaming) $(pgrep generagames) $(pgrep astragon) $(pgrep chucklefish) $(pgrep t2kgames) $(pgrep t2ksports) $(pgrep turner) $(pgrep uplayonline) $(pgrep pubg) $(pgrep dreamotion) $(pgrep snailgames) $(pgrep dexintgames) $(pgrep haegin) $(pgrep panzerdog) $(pgrep igg) $(pgrep gtarcade) $(pgrep naxon) $(pgrep mame4droid) $(pgrep kakaogames) $(pgrep telltalegames) $(pgrep seleuco) $(pgrep innersloth) $(pgrep kiloo) $(pgrep imaginalis) $(pgrep refuelgames) $(pgrep scottgames) $(pgrep clickteam) $(pgrep minigames) $(pgrep headupgames) $(pgrep mobigames) $(pgrep callofduty) $(pgrep ubisoft) $(pgrep ppsspp) $(pgrep cf) $(pgrep feralinteractive) $(pgrep riotgames) $(pgrep playgendary) $(pgrep joymax) $(pgrep deadeffect) $(pgrep blackdesertm) $(pgrep firsttouchgames) $(pgrep standoff2) $(pgrep criticalops) $(pgrep wolvesinteractive) $(pgrep gamedevltd) $(pgrep mojang) $(pgrep miHoYo) $(pgrep miniclip) $(pgrep moontoon) $(pgrep gameloft) $(pgrep netmarble) $(pgrep yoozoogames) $(pgrep eyougame) $(pgrep asphalt) $(pgrep dhlove) $(pgrep fifamobile) $(pgrep freefireth) $(pgrep activision) $(pgrep konami) $(pgrep gamevil) $(pgrep pixonic) $(pgrep gameparadiso) $(pgrep wargaming) $(pgrep madfingergames) $(pgrep supercell) $(pgrep allstar) $(pgrep garena); do
  if [[ "$(grep $gpid $toptsdir)" ]] | [[ "$(grep $gpid $toptcdir)" ]]; then
      kmsg3 ""
      kmsg "User is playing, applied gaming profile"
      kmsg3 ""
      gaming
      sleep 30
for spid in $(pgrep whatsapp) $(pgrep musically) $(pgrep adobe) $(pgrep telegram) $(pgrep netflix) $(pgrep wemesh) $(pgrep discord) $(pgrep youtube) $(pgrep facebook) $(pgrep chrome) $(pgrep browser) $(pgrep instagram) $(pgrep docs) $(pgrep twitch); do
  if [[ "$(grep $spid $toptsdir)" ]] | [[ "$(grep $spid $toptcdir)" ]]; then
      kmsg3 ""
      kmsg "User is using social media, and etc apps. Applied balanced profile"
      kmsg3 ""
      balanced
      sleep 30
for bpid in $(pgrep geekbench) $(pgrep androbench2) $(pgrep kinemaster) $(pgrep futuremark) $(pgrep cputhrottlingtest) $(pgrep camera) $(pgrep cam) $(pgrep antutu); do
  if [[ "$(grep $bpid $toptsdir)" ]] | [[ "$(grep $bpid $toptcdir)" ]]; then
      kmsg3 ""
      kmsg "User is running benchmark / heavy apps. Applied extreme profile"
      kmsg3 ""
      extreme
     sleep 30
  fi
    done
        fi
          done

      get_scrn_state
      if [[ "$(cat /sys/class/leds/lcd-backlight/brightness)" ]] || [[ "$(cat /sys/class/backlight/panel*-backlight/brightness)" == "0" ]] || [[ $scrn_on == "0" ]]; then
      kmsg3 "" 
      kmsg "Device screen is turned off. Applied battery profile, extended script check time"
      kmsg3 ""
      battery
      sleep 100
      get_batt_sts
  elif [[ "$batt_sts" == "Charging" ]]; then
        kmsg3 ""
        kmsg "Device is charging, trying to reduce battery cycles by applying battery profile and extending check time"
        kmsg3 ""
        battery
        sleep 100
        get_batt_pctg
        get_batt_sts
  elif [[ "$batt_pctg" -lt "20" ]] | [[ "$batt_sts" == "Discharging" ]]; then
        kmsg3 ""
        kmsg "Device battery is lower than 20%, applied battery profile and extended script check time to reduce battery comsumption"
        kmsg3 ""
        battery
        sleep 100
  else
      kmsg3 ""
      kmsg "No considerable usage found. Applied latency profile"
      kmsg3 ""
      latency
      sleep 15
    fi
done
  
if [[ $avail_ram -lt $full_ram ]] || [[ $avail_ram -eq $full_ram ]]; then
    kmsg "Device ram is almost fully in use, dropping caches to free some RAM"
    kmsg3 ""
    sync
    write "$vm/drop_caches" "3"
    get_ram_info
    kmsg "Device ram after boosting: $avail_ram"
    kmsg3 ""
fi
)&