#!/system/bin/sh
# KTSR™ by pedro (pedrozzz0 @ GitHub)
# Credits: Uperf, by Matt Yang.
# If you wanna use it as part of your project, please maintain the credits to it respective's author(s).

MODPATH="/data/adb/modules/KTSR"

# Load libraries
. "${MODPATH}/libs/libktsr.sh"

# Check for root permissions and bail if not granted
[[ "$(id -u)" != "0" ]] && kmsg2 "No root permissions. Exiting..." && exit 1

[[ -e "${KLOG}" ]] && rm -rf "${KLOG}"
[[ ! -d "/data/media/0/KTSR" ]] && mkdir -p "/data/media/0/KTSR"
[[ -d "/data/media/0/KTSR" ]] && touch "${KLOG}"
[[ -e "${KDBG}" ]] && rm -rf "${KDBG}"

boot_run_once=false
ktsr_prof=$(getprop persist.king.tweaks.prof)
[[ -z "${ktsr_prof}" ]] && setprop persist.king.tweaks.prof "3"

while true
do
  if "${boot_run_once}"; then
      [[ "$(getprop persist.king.tweaks.prof)" == "${ktsr_prof}" ]] && continue
  else
      boot_run_once=true
  fi
ktsr_prof=$(getprop persist.king.tweaks.prof)

case "${ktsr_prof}" in
1)
ktsr_prof_id=otomatis
;;
2)
ktsr_prof_id=baterai
;;
3)
ktsr_prof_id=seimbang
;;
4)
ktsr_prof_id=ekstrim
;;
5)
ktsr_prof_id=gaming
;;
6)
ktsr_prof_id=latensi
;;
esac

case "${ktsr_prof}" in
1)
ktsr_prof_pt=automático
;;
2)
ktsr_prof_pt=bateria
;;
3)
ktsr_prof_pt=balanceado
;;
4)
ktsr_prof_pt=extremo
;;
5)
ktsr_prof_pt=gaming
;;
6)
ktsr_prof_pt=latência
;;
esac

case "${ktsr_prof}" in
1)
ktsr_prof_en=automatic
;;
2)
ktsr_prof_en=battery
;;
3)
ktsr_prof_en=balanced
;;
4)
ktsr_prof_en=extreme
;;
5)
ktsr_prof_en=gaming
;;
6)
ktsr_prof_en=latency
;;
esac

case "${ktsr_prof}" in 
1)
ktsr_prof_tr=gecikme
;;
2)
ktsr_prof_tr=batarya
;;
3)
ktsr_prof_tr=dengeli
;;
4)
ktsr_prof_tr=aşırı
;;
5)
ktsr_prof_tr=oyun
;;
6)
ktsr_prof_tr=gecikme
;;
esac

case "${ktsr_prof}" in
1)
ktsr_prof_fr=automatique
;;
2)
ktsr_prof_fr=batterie
;;
3)
ktsr_prof_fr=modéré
;;
4)
ktsr_prof_fr=extrême
;;
5)
ktsr_prof_fr=jeu
;;
6)
ktsr_prof_fr=latence
;;
esac

clear_logs

# Similiar to PinnerService, Mlock(Unevictable) 200~350MB
fscc_add_obj "${sys_frm}/framework.jar"
fscc_add_obj "${sys_frm}/services.jar"
fscc_add_obj "${sys_frm}/ext.jar"
fscc_add_obj "${sys_frm}/telephony-common.jar"
fscc_add_obj "${sys_frm}/qcnvitems.jar"
fscc_add_obj "${sys_frm}/oat"
fscc_add_obj "${sys_frm}/arm64"
fscc_add_obj "${sys_frm}/arm/boot-framework.oat"
fscc_add_obj "${sys_frm}/arm/boot-framework.vdex"
fscc_add_obj "${sys_frm}/arm/boot.oat"
fscc_add_obj "${sys_frm}/arm/boot.vdex"
fscc_add_obj "${sys_frm}/arm/boot-core-libart.oat"
fscc_add_obj "${sys_frm}/arm/boot-core-libart.vdex"
fscc_add_obj "${sys_lib}/libandroid_servers.so"
fscc_add_obj "${sys_lib}/libandroid_runtime.so"
fscc_add_obj "${sys_lib}/libandroidfw.so"
fscc_add_obj "${sys_lib}/libandroid.so"
fscc_add_obj "${sys_lib}/libhwui.so"
fscc_add_obj "${sys_lib}/libjpeg.so"
fscc_add_obj "${vdr_lib}/libssc.so"
fscc_add_obj "${vdr_lib}/libgsl.so"
fscc_add_obj "${vdr_lib}/sensors.ssc.so"
fscc_add_apex_lib "core-oj.jar"
fscc_add_apex_lib "core-libart.jar"
fscc_add_apex_lib "updatable-media.jar"
fscc_add_apex_lib "okhttp.jar"
fscc_add_apex_lib "bouncycastle.jar"

# Do not pin too many files on low memory devices
[[ "${total_ram}" -gt "2048" ]] && fscc_add_apk "com.android.systemui"
[[ "${total_ram}" -gt "2048" ]] && fscc_add_dex "com.android.systemui"
[[ "${total_ram}" -gt "4096" ]] && fscc_add_app_home "com.android.systemui"
[[ "${total_ram}" -gt "4096" ]] && fscc_add_app_ime "com.android.systemui"
fscc_stop
fscc_start

# Run adjshield
[[ ! -f "${adj_cfg}" ]] && adjshield_create_default_cfg
adjshield_stop
adjshield_start
rebuild_process_scan_cache
cgroup_bbn_opt

# Save mode to be applied automatically after reboot
save_panel

case "${ktsr_prof_en}" in
"automatic") 
case "$(getprop persist.sys.locale)" in
en*)
toast
;;
pt*)        
toast_pt
;;
id-ID)
toast_id
;;
tr*)
toast_tr
;;
fr*)
toast_fr
;;
*)
toast
;;
esac

automatic
         
case "$(getprop persist.sys.locale)" in
en*)
toast_1
;;
pt*)
toast_pt_1
;;
id-ID)
toast_id_1
;;
tr*)
toast_tr_1
;;
fr*)
toast_fr_1
;;
esac
;;
"balanced")
case "$(getprop persist.sys.locale)" in
en*)
toast
;;
pt*)        
toast_pt
;;
id-ID)
toast_id
;;
tr*)
toast_tr
;;
fr*)
toast_fr
;;
esac

killall -9 kingauto >/dev/null 2>&1
setprop kingauto.prof null
balanced
	 	
case "$(getprop persist.sys.locale)" in
en*)
toast_1
;;
pt*)
toast_pt_1
;;
id-ID)
toast_id_1
;;
tr*)
toast_tr_1
;;
fr*)
toast_fr_1
;;
esac
;;
"extreme") 
case "$(getprop persist.sys.locale)" in
en*)
toast
;;
pt*)        
toast_pt
;;
id-ID)
toast_id
;;
tr*)
toast_tr
;;
fr*)
toast_fr
;;
esac
     	   
killall -9 kingauto >/dev/null 2>&1
setprop kingauto.prof null
extreme
	 		 
case "$(getprop persist.sys.locale)" in
en*)
toast_1
;;
pt*)
toast_pt_1
;;
id-ID)
toast_id_1
;;
tr*)
toast_tr_1
;;
fr*)
toast_fr_1
;;
esac
;;
"battery")
case "$(getprop persist.sys.locale)" in
en*)
toast
;;
pt*)        
toast_pt
;;
id-ID)
toast_id
;;
tr*)
toast_tr
;;
fr*)
toast_fr
;;
esac
     	
killall -9 kingauto >/dev/null 2>&1
setprop kingauto.prof null
battery
	 			
case "$(getprop persist.sys.locale)" in
en*)
toast_1
;;
pt*)
toast_pt_1
;;
id-ID)
toast_id_1
;;
tr*)
toast_tr_1
;;
fr*)
toast_fr_1
;;
esac
;;
"gaming")
case "$(getprop persist.sys.locale)" in
en*)
toast
;;
pt*)        
toast_pt
;;
id-ID)
toast_id
;;
tr*)
toast_tr
;;
fr*)
toast_fr
;;
esac
         
killall -9 kingauto >/dev/null 2>&1
setprop kingauto.prof null
gaming
	 				
case "$(getprop persist.sys.locale)" in
en*)
toast_1
;;
pt*)
toast_pt_1
;;
id-ID)
toast_id_1
;;
tr*)
toast_tr_1
;;
fr*)
toast_fr_1
;;
esac
;;
"latency")
case "$(getprop persist.sys.locale)" in
en*)
toast
;;
pt*)        
toast_pt
;;
id-ID)
toast_id
;;
tr*)
toast_tr
;;
fr*)
toast_fr
;;
esac
         
killall -9 kingauto >/dev/null 2>&1
setprop kingauto.prof null
latency
	 				
case "$(getprop persist.sys.locale)" in
en*)
toast_1
;;
pt*)
toast_pt_1
;;
id-ID)
toast_id_1
;;
tr*)
toast_tr_1
;;
fr*)
toast_fr_1
;;
esac
;;
esac
done