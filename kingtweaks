#!/system/bin/sh
# KTSR by pedro (pedrozzz0 @ GitHub)
# Credits: Uperf, by Matt Yang.
# If you wanna use it as part of your project, please maintain the credits to it respective's author(s).

MODPATH=/data/adb/modules/KTSR

# Load libraries
. "$MODPATH"/libs/libktsr.sh

# Check for root permissions and bail if not granted
if [[ "$(id -u)" != "0" ]]
then
    kmsg2 "No root permissions. Exiting..."
    exit 1
fi

if [[ -e "$KLOG" ]] 
then
    rm -rf "$KLOG"
fi

if [[ ! -d "/data/media/0/KTSR" ]] 
then
    mkdir -p "/data/media/0/KTSR"
fi

if [[ -d "/data/media/0/KTSR" ]] 
then
    touch "$KLOG"
fi

if [[ -e "$KDBG" ]]
then
    rm -rf "$KDBG"
fi

boot_run_once=false
ktsr_prof=$(getprop persist.king.tweaks.prof)
[[ -z "$ktsr_prof" ]] && setprop persist.king.tweaks.prof "3"

while true
do
sleep 3
if "$boot_run_once"
then
[[ "$(getprop persist.king.tweaks.prof)" == "$ktsr_prof" ]] && continue
else
boot_run_once=true
fi
ktsr_prof=$(getprop persist.king.tweaks.prof)

case "$ktsr_prof" in
1)
  ktsr_prof_in=otomatis
  ;;

    2)
     ktsr_prof_in=baterai
     ;;

      3)
       ktsr_prof_in=seimbang
       ;;

        4)
         ktsr_prof_in=ekstrim
         ;;

         5)
          ktsr_prof_in=gaming
          ;;

           6)
            ktsr_prof_in=latensi
            ;;
       esac

case "$ktsr_prof" in

1)
  ktsr_prof_pt=automático
  ;;

  2)
   ktsr_prof_pt=bateria
    ;;

    3)
     ktsr_prof_pt=balanceado
     ;;
    
      4)
       ktsr_prof_pt=extremo
       ;;
        	
        5)
         ktsr_prof_pt=gaming
         ;;

         6)
          ktsr_prof_pt=latência
          ;;
      esac

case "$ktsr_prof" in

1)
  ktsr_prof_en=automatic
  ;;

  2)
    ktsr_prof_en=battery
    ;;

     3)
      ktsr_prof_en=balanced
      ;;

       4)
        ktsr_prof_en=extreme
        ;;

        5)
         ktsr_prof_en=gaming
         ;;

          6)
           ktsr_prof_en=latency
           ;;
      esac

case "$ktsr_prof" in 

1)
  ktsr_prof_tr=gecikme
  ;;

    2)
     ktsr_prof_tr=batarya
     ;;

      3)
       ktsr_prof_tr=dengeli
       ;;

        4)
         ktsr_prof_tr=aşırı
         ;;

          5)
            ktsr_prof_tr=oyun
            ;;

             6)
              ktsr_prof_tr=gecikme
              ;;
         esac

case "$ktsr_prof" in

1)
  ktsr_prof_fr=automatique
  ;;

   2)
    kts_prof_fr=batterie
    ;;

     3)
       ktsr_prof_fr=modéré
       ;;

        4)
         ktsr_prof_fr=extrême
         ;;

          5)
           ktsr_prof_fr=jeu
           ;;

            6)
             ktsr_prof_fr=latence
             ;;
        esac

clear_logs

    # Reduce perf cluster wakeup
    # Daemons
    pin_proc_on_pwr "crtc_commit|crtc_event|pp_event|msm_irqbalance|netd|mdnsd|analytics"
    pin_proc_on_pwr "imsdaemon|cnss-daemon|qadaemon|qseecomd|time_daemon|ATFWD-daemon|ims_rtp_daemon|qcrilNrd"
    # ueventd related to hotplug of camera, wifi, usb... 
    # pin_proc_on_pwr "ueventd"
    # hardware services, eg. android.hardware.sensors@1.0-service
    pin_proc_on_pwr "android.hardware.bluetooth"
    pin_proc_on_pwr "android.hardware.gnss"
    pin_proc_on_pwr "android.hardware.health"
    pin_proc_on_pwr "android.hardware.thermal"
    pin_proc_on_pwr "android.hardware.wifi"
    pin_proc_on_pwr "android.hardware.keymaster"
    pin_proc_on_pwr "vendor.qti.hardware.qseecom"
    pin_proc_on_pwr "hardware.sensors"
    pin_proc_on_pwr "sensorservice"
    # com.android.providers.media.module controlled by uperf
    pin_proc_on_pwr "android.process.media"
    # com.miui.securitycenter & com.miui.securityadd
    pin_proc_on_pwr "miui\.security"

    # system_server blacklist
    # system_server controlled by uperf
    change_proc_cgroup "system_server" "" "cpuset"
    # input dispatcher
    change_thread_high_prio "system_server" "input"
    # related to camera startup
    # change_thread_affinity "system_server" "ProcessManager" "ff"
    # not important
    pin_thread_on_pwr "system_server" "Miui|Connect|Network|Wifi|backup|Sync|Observer|Power|Sensor|batterystats"
    pin_thread_on_pwr "system_server" "Thread-|pool-|Jit|CachedAppOpt|Greezer|TaskSnapshot|Oom"
    change_thread_nice "system_server" "Greezer|TaskSnapshot|Oom" "4"
    # pin_thread_on_pwr "system_server" "Async" # it blocks camera
    # pin_thread_on_pwr "system_server" "\.bg" # it blocks binders
    # do not let GC thread block system_server
    # pin_thread_on_mid "system_server" "HeapTaskDaemon"
    # pin_thread_on_mid "system_server" "FinalizerDaemon"

    # Render Pipeline
    # surfaceflinger controlled by uperf
    # android.phone controlled by uperf
    # speed up searching service binder
    change_task_cgroup "servicemanag" "top-app" "cpuset"
    # prevent display service from being preempted by normal tasks
    # vendor.qti.hardware.display.allocator-service cannot be set to RT policy, will be reset to 120
    unpin_proc "\.hardware\.display"
    change_task_affinity "\.hardware\.display" "7f"
    change_task_rt "\.hardware\.display" "2"
    # let UX related Binders run with top-app
    change_thread_cgroup "\.hardware\.display" "^Binder" "top-app" "cpuset"
    change_thread_cgroup "\.hardware\.display" "^HwBinder" "top-app" "cpuset"
    change_thread_cgroup "\.composer" "^Binder" "top-app" "cpuset"

    # Heavy Scene Boost
    # boost app boot process, zygote--com.xxxx.xxx
    # boost android process pool, usap--com.xxxx.xxx
    unpin_proc "zygote|usap"
    change_task_high_prio "zygote|usap"

    # busybox fork from magiskd
    pin_proc_on_mid "magiskd"
    change_task_nice "magiskd" "19"
    
    change_task_rt "kingtweaks" "1"
    pin_proc_on_pwr "kingtweaks"
    
    # kernel reclaim threads run on more power-efficient cores
    change_task_nice "kswapd" "-2"
    change_task_nice "oom_reaper" "-2"
    change_task_affinity "kswapd" "7f"
    change_task_affinity "oom_reaper" "7f"

# Similiar to PinnerService, Mlock(Unevictable) 200~350MB
fscc_add_obj "${sys_frm}/framework.jar"
fscc_add_obj "${sys_frm}/services.jar"
fscc_add_obj "${sys_frm}/ext.jar"
fscc_add_obj "${sys_frm}/telephony-common.jar"
fscc_add_obj "${sys_frm}/qcnvitems.jar"
fscc_add_obj "${sys_frm}/oat"
fscc_add_obj "${sys_frm}/arm64"
fscc_add_obj "${sys_frm}/arm/boot-framework.oat"
fscc_add_obj "${sys_frm}/arm/boot-framework.vdex"
fscc_add_obj "${sys_frm}/arm/boot.oat"
fscc_add_obj "${sys_frm}/arm/boot.vdex"
fscc_add_obj "${sys_frm}/arm/boot-core-libart.oat"
fscc_add_obj "${sys_frm}/arm/boot-core-libart.vdex"
fscc_add_obj "${sys_lib}/libandroid_servers.so"
fscc_add_obj "${sys_lib}/libandroid_runtime.so"
fscc_add_obj "${sys_lib}/libandroidfw.so"
fscc_add_obj "${sys_lib}/libandroid.so"
fscc_add_obj "${sys_lib}/libhwui.so"
fscc_add_obj "${sys_lib}/libjpeg.so"
fscc_add_obj "${vdr_lib}/libssc.so"
fscc_add_obj "${vdr_lib}/libgsl.so"
fscc_add_obj "${vdr_lib}/sensors.ssc.so"
fscc_add_apex_lib "core-oj.jar"
fscc_add_apex_lib "core-libart.jar"
fscc_add_apex_lib "updatable-media.jar"
fscc_add_apex_lib "okhttp.jar"
fscc_add_apex_lib "bouncycastle.jar"
# Do not pin too many files on low memory devices
[[ "$total_ram" -gt "2048" ]] && fscc_add_apk "com.android.systemui"
[[ "$total_ram" -gt "2048" ]] && fscc_add_dex "com.android.systemui"
[[ "$total_ram" -gt "3072" ]] && fscc_add_app_home "com.android.systemui"
[[ "$total_ram" -gt "3072" ]] && fscc_add_app_ime "com.android.systemui"

fscc_stop
fscc_start

# Run adjshield
[[ ! -f "${adj_cfg}" ]] && adjshield_create_default_cfg
adjshield_stop
adjshield_start
rebuild_process_scan_cache

# save mode for automatic applying mode after reboot
save_panel

case "$ktsr_prof_en" in
"automatic") 

if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr

else
    toast
fi

automatic
         
if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast_1
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast_1
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt_1
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in_1
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr_1
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr_1

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr_1

else
	toast_1
fi
;;
	 
  "balanced")

  if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr

else
    toast
fi
     	  
    killall -9 kingauto >/dev/null 2>&1
    setprop kingauto.prof null
    balanced
	 	
  if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast_1
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast_1
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt_1
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in_1
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr_1
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr_1

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr_1

else
	toast_1
fi
  ;;
	
	"extreme") 

    if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr

else
    toast
fi
     	   
      killall -9 kingauto >/dev/null 2>&1
      setprop kingauto.prof null
	  extreme
	 		 
      if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast_1
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast_1
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt_1
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in_1
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr_1
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr_1

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr_1

else
	toast_1
fi
	  ;;
	 		
	 	"battery")
	
         if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr

else
    toast
fi
     	
           killall -9 kingauto >/dev/null 2>&1
           setprop kingauto.prof null
	 	  battery
	 			
         if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast_1
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast_1
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt_1
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in_1
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr_1
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr_1

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr_1

else
	toast_1
fi
	 	;;

	    	"gaming")

            if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr

else
    toast
fi
         
              killall -9 kingauto >/dev/null 2>&1
              setprop kingauto.prof null
	 	     gaming
	 				
              if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast_1
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast_1
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt_1
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in_1
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr_1
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr_1

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr_1

else
	toast_1
fi
	      	;;
	 	
	        	"latency")

                if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
then
    toast
     	
elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
then
    toast
         
elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
then
    toast_pt
     	
elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
then
    toast_in
     	
elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
then
    toast_tr
     	
elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
then
    toast_fr

elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
then
    toast_fr

else
    toast
fi
         
                 killall -9 kingauto >/dev/null 2>&1
                 setprop kingauto.prof null
	 			latency
	 				
                 if [[ "$(getprop persist.sys.locale)" == "en-US" ]]
                 then
                 toast_1
     	
                elif [[ "$(getprop persist.sys.locale)" == "en-GB" ]]
                then
                toast_1
    
                elif [[ "$(getprop persist.sys.locale)" == "pt-BR" ]]
                then
                toast_pt_1
     	
                elif [[ "$(getprop persist.sys.locale)" == "id-ID" ]]
                then
                toast_in_1
                
                elif [[ "$(getprop persist.sys.locale)" == "tr-TR" ]]
                then
                    toast_tr_1
     	
                elif [[ "$(getprop persist.sys.locale)" == "fr-FR" ]]
                then
                    toast_fr_1

                elif [[ "$(getprop persist.sys.locale)" == "fr-CA" ]]
                then
                    toast_fr_1
                
                else
                    toast_1
                fi
                ;;
            esac
       done