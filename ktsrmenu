#!/system/bin/sh
# KTSRâ„¢ by Pedro (pedrozzz0 @ GitHub)
# Credits: veez21
# If you wanna use it as part of your project, please maintain the credits to it respective's author(s).

# Magisk Module ID **
ID="KTSR"

# Detect root
_name=$(basename "$0")
ls /data >/dev/null 2>&1 || {
	echo "[!] $ID needs to run as root"
	echo "type 'su' then '$_name'"
	exit 1
}

# Import magisk util_functions.sh
[[ -f "/data/adb/magisk/util_functions.sh" ]] && . /data/adb/magisk/util_functions.sh || {
	echo "[!] util_functions.sh not detected"
	exit 1
}

# Magisk Mod Directory
[[ -d "/sbin/.magisk" ]] && MOUNTPATH="/sbin/.magisk/modules" || MOUNTPATH="$(find /dev -mindepth 2 -maxdepth 2 -type d -name ".magisk")/modules"
MODDIR="$MOUNTPATH/$ID"
[[ ! -d "$MODDIR" ]] && {
	echo "[!] Module not detected"
	exit 1
}

# Set path to your busybox if applicable
_bb=

# Load mod-util.sh
. "$MODDIR/mod-util.sh" || exit $?

# Set Log Files
mount -o remount,rw /cache 2>/dev/null
mount -o rw,remount /cache 2>/dev/null

# Logs should go in this file
LOG="/data/media/0/KTSR/$ID-CLI.log"
oldLOG="/data/media/0/KTSR/$ID-CLI-old.log"

# Verbose output goes here
VERLOG="/data/media/0/KTSR/$ID-verbose.log"
oldVERLOG="/data/media/0/KTSR/$ID-verbose-old.log"
stdoutLOG="/data/media/0/KTSR/$ID-CLI-STDOUT.log"
oldstdoutLOG="/data/media/0/KTSR/$ID-CLI-STDOUT-old.log"

# Start logging verbosely
mv -f "$VERLOG" "$oldVERLOG" 2>/dev/null
mv -f "$LOG" "$oldLOG" 2>/dev/null
mv -f "$stdoutLOG" "$oldstdoutLOG" 2>/dev/null

# exec 3>&1

# exec 1>$stdoutLOG

set -x 2>"$VERLOG"

ktsr_prof=$(getprop persist.king.tweaks.prof)

case "$ktsr_prof" in
	1) ktsr_prof_en="Automatic" ;;
	2) ktsr_prof_en="Battery" ;;
	3) ktsr_prof_en="Balanced" ;;
	4) ktsr_prof_en="Extreme" ;;
	5) ktsr_prof_en="Gaming" ;;
	6) ktsr_prof_en="Latency" ;;
esac

[[ "$(settings get global low_power)" == "1" ]] && low_power_mode="Enabled" || low_power_mode="Disabled"
[[ "$(cmd netpolicy get restrict-background | awk '{print $4}')" == "enabled" ]] && data_saver="Enabled" || data_saver="Disabled"
[[ "$(settings get secure location_providers_allowed)" == "" ]] && loc_mode_pwr_saving="Enabled" || loc_mode_pwr_saving="Disabled"

# Fetch the device SDK
sdk=$(getprop ro.build.version.sdk)
[[ "$sdk" == "" ]] && sdk=$(getprop ro.vendor.build.version.sdk)
[[ "$sdk" == "" ]] && sdk=$(getprop ro.vndk.version)
menu() {
	clear
	echo ""
	echo "${Y}************${N}"
	echo "${Y}* KTSR CLI *${N}"
	echo "${Y}************${N}"
	echo ""
	echo "${G}Ver: 1.6.3.5-r13${N}"
	echo ""
	echo "[*] Current Profile: ${G}$ktsr_prof_en${N}"
	echo ""
	echo "[*] Available profiles: "
	echo ""
	echo "${C}[1] Automatic: Change between profiles automatically based on user activity for a better user-experience.${N}"
	echo ""
	echo "${B}[2] Battery: Reduce SOC power draw to less battery comsumption, ensuring a juicy battery life.${N}"
	echo ""
	echo "${G}[3] Balanced: Balanced between battery life and performance, perfect to be used on day-to-day activities.${N}"
	echo ""
	echo "${Y}[4] Extreme: Tweaks both CPU / GPU for a consistent experience while dealing with heavy apps. May drain more battery life compared to Balanced / Latency.${N}"
	echo ""
	echo "${R}[5] Gaming: Recommended to users who wants the best performance possible while playing, tweaking both CPU / GPU to it's max. May drain a lot of battery life.${N}"
	echo ""
	echo "[6] Latency: Recommended to users who want really silky / smooth UI"
	echo ""
	echo "[*] Other misc options: "
	echo ""
	echo "[7] Optimize apps package"
	echo ""
	[[ "$low_power_mode" == "Disabled" ]] && {
		echo "[8] Enable low power mode"
		echo ""
	} || {
		echo "[9] Disable low power mode"
		echo ""
	}
	[[ "$data_saver" == "Disabled" ]] && {
		echo "[10] Enable data saver"
		echo ""
	} || {
		echo "[11] Disable data saver"
		echo ""
	}
	[[ "$loc_mode_pwr_saving" == "Disabled" ]] && {
		echo "[12] Enable power-saving location mode"
		echo ""
	} || {
		echo "[13] Disable power-saving location mode"
		echo ""
	}
	echo "[14] Clean trash files, E.G: System logs, debug logs, etc."
	echo ""
	echo "[15] Access our telegram group"
	echo ""
	[[ -e "/sys/module/mdss_mdp/parameters/custom_hz" ]] && {
		echo "[16] 50 HZ Refresh Rate"
		echo ""
	} || [[ -e "/sys/module/mdss_mdp/parameters/custom_hz" ]] && [[ "$(grep -Eo '[0-9]' /sys/module/mdss_mdp/parameters/custom_hz)" ]] && {
		echo "[16] 50 HZ Refresh Rate"
		echo ""
		echo "[17] 55 HZ Refresh Rate"
		echo ""
	}
	[[ "$(settings get system peak_refresh_rate)" ]] && [[ "$(settings get system peak_refresh_rate | cut -c1-3 | tr -d .)" -ne "60" ]] && {
		echo "[18] 60 HZ Refresh Rate"
		echo ""
	} || [[ "$(settings get system peak_refresh_rate)" ]] && [[ "$(settings get system peak_refresh_rate | cut -c1-3 | tr -d .)" -ne "90" ]] && {
		echo "[19] 90 HZ Refresh Rate"
		echo ""
	} || [[ "$(settings get system peak_refresh_rate)" ]] && [[ "$(settings get system peak_refresh_rate | cut -c1-3 | tr -d .)" -ne "120" ]] && {
		echo "[20] 120 HZ Refresh Rate"
		echo ""
	}
	echo "[21] Reset Refresh Rate config"
	echo ""
	echo "[22] Free RAM [ Balanced ] (Will only drop caches)."
	echo ""
	echo "[23] Free RAM [ Agressive ] (Will kill all background apps and drop caches)."
	echo ""
	echo "[24] Free RAM [ Extreme ] (Will kill all apps, and drop caches)."
	echo ""
	[[ -e "/sys/class/thermal/thermal_message/sconfig" ]] && [[ "$(cat /sys/class/thermal/thermal_message/sconfig)" != "2" ]] && {
		echo "[25] Switch to dynamic thermal profile (May improve charging speed)"
		echo ""
	} || [[ -e "/sys/class/thermal/thermal_message/sconfig" ]] && [[ "$(cat /sys/class/thermal/thermal_message/sconfig)" == "2" ]] && {
		echo "[26] Switch to default thermal profile"
		echo ""
	}
	echo "[27] Reset battery stats"
	echo ""
	echo "[28] Access our Wiki"
	echo ""
	[[ "$sdk" -ge "31" ]] && {
		echo "[29] Apply downscale on a app"
		echo ""
		echo "[30] Reset downscale from a app"
		echo ""
	}
	[[ "$(pm list package com.google.android.gms)" ]] && {
		echo "[31] Enable Gapps"
		echo ""
		echo "[32] Disable Gapps"
		echo ""
	}
	[[ "$sdk" -ge "28" ]] && {
	echo "[33] Set renderer to OpenGL"
	echo ""
	echo "[34] Set renderer to Skia OpenGL"
	echo ""
	echo "[35] Set renderer to Skia Vulkan"
	echo ""
	}
	echo "${R}[0] Exit${N}"
	echo ""
	echo -n "${Y}[*] Select the desired option:${N} "
	read -r option
	case "$option" in
		"1")
			echo "${B}Applying profile...${N}"
			setprop persist.king.tweaks.prof "1" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"2")
			echo "${B}Applying profile...${N}"
			setprop persist.king.tweaks.prof "2" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"3")
			echo "${B}Applying profile...${N}"
			setprop persist.king.tweaks.prof "3" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			menu
			;;
		"4")
			echo "${B}Applying profile...${N}"
			setprop persist.king.tweaks.prof "4" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"5")
			echo "${B}Applying profile...${N}"
			setprop persist.king.tweaks.prof "5" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"6")
			echo "${B}Applying profile...${N}"
			setprop persist.king.tweaks.prof "6" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"7")
			echo "${B}Optimizing packages...${N}"
			pm compile -a -f --compile-layouts
			cmd package bg-dexopt-job
			sleep 2
			menu
			;;
		"8")
			settings put global low_power 1 2>/dev/null
			settings put global low_power_sticky 1 2>/dev/null
			settings put global app_standby_enabled 1 2>/dev/null
			settings put global forced_app_standby_enabled 1 2>/dev/null
			settings put global app_auto_restriction_enabled true 2>/dev/null
			settings put global forced_app_standby_for_small_battery_enabled 1 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"9")
			settings put global low_power 0 2>/dev/null
			settings reset global low_power 2>/dev/null
			settings put global low_power_sticky 0 2>/dev/null
			settings reset global low_power_sticky 2>/dev/null
			settings put global app_standby_enabled 1 2>/dev/null
			settings reset global app_standby_enabled 2>/dev/null
			settings put global forced_app_standby_enabled 0 2>/dev/null
			settings reset global forced_app_standby_enabled 2>/dev/null
			settings put global app_auto_restriction_enabled false 2>/dev/null
			settings reset global app_auto_restriction_enabled 2>/dev/null
			settings put global forced_app_standby_for_small_battery_enabled 0 2>/dev/null
			settings reset global forced_app_standby_for_small_battery_enabled 1 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"10")
			cmd netpolicy set restrict-background true 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"11")
			cmd netpolicy set restrict-background false 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"12")
			echo "${B}Applying settings...${N}"
			settings put secure location_mode "0" 2>/dev/null
			settings put global assisted_gps_enabled "0" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"13")
			settings put global assisted_gps_enabled "1" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"14")
			echo "${B}Cleaning debug logs and system trash...${N}"
			cleantrash 2>/dev/null
			echo "${G}[*] Done!${N}"
			sleep 2
			menu
			;;
		"15")
			am start -a android.intent.action.VIEW -d https://t.me/kingprojectzdiscussion
			menu
			;;
		"16")
			[[ -e "/sys/module/mdss_mdp/parameters/custom_hz" ]] && [[ "$(grep -Eo '[0-9]' /sys/module/mdss_mdp/parameters/custom_hz 2>/dev/null)" ]] && echo "50" >"/sys/module/mdss_mdp/parameters/custom_hz" || echo "Y" >"/sys/module/mdss_mdp/parameters/custom_hz"
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"17")
			[[ -e "/sys/module/mdss_mdp/parameters/custom_hz" ]] && [[ "$(grep -Eo '[0-9]' /sys/module/mdss_mdp/parameters/custom_hz 2>/dev/null)" ]] && echo "55" >"/sys/module/mdss_mdp/parameters/custom_hz"
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"18")
			[[ -e "/sys/module/mdss_mdp/parameters/custom_hz" ]] && [[ "$(grep -o -e '[0-9\.]+' /sys/module/mdss_mdp/parameters/custom_hz 2>/dev/null)" ]] && echo "60" >"/sys/module/mdss_mdp/parameters/custom_hz" || echo "N" >"/sys/module/mdss_mdp/parameters/custom_hz"
			settings put system min_refresh_rate 60 2>/dev/null
			settings put system peak_refresh_rate 60 2>/dev/null
			settings put system user_refresh_rate 60 2>/dev/null
			settings put global oneplus_screen_refresh_rate 1 2>/dev/null
			settings put secure coloros_screen_refresh_rate 2 2>/dev/null
			service call SurfaceFlinger 1035 i32 1 >/dev/null 2>&1
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"19")
			settings put system min_refresh_rate 90 2>/dev/null
			settings put system peak_refresh_rate 90 2>/dev/null
			settings put system user_refresh_rate 90 2>/dev/null
			settings put global oneplus_screen_refresh_rate 0 2>/dev/null
			settings put secure coloros_screen_refresh_rate 1 2>/dev/null
			service call SurfaceFlinger 1035 i32 0 >/dev/null 2>&1
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"20")
			settings put system min_refresh_rate 120 2>/dev/null
			settings put system peak_refresh_rate 120 2>/dev/null
			settings put system user_refresh_rate 120 2>/dev/null
			settings put global oneplus_screen_refresh_rate 0 2>/dev/null
			settings put secure coloros_screen_refresh_rate 3 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"21")
			settings reset system min_refresh_rate >/dev/null 2>&1
			settings reset system peak_refresh_rate >/dev/null 2>&1
			settings reset system user_refresh_rate >/dev/null 2>&1
			settings reset global oneplus_screen_refresh_rate >/dev/null 2>&1
			settings reset secure coloros_screen_refresh_rate >/dev/null 2>&1
			service call SurfaceFlinger 1035 i32 1 >/dev/null 2>&1
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"22")
			sync
			echo "3" >"/proc/sys/vm/drop_caches"
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 4
			menu
			;;
		"23")
			sync
			echo "3" >"/proc/sys/vm/drop_caches"
			am kill-all
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 4
			menu
			;;
		"24")
			sync
			echo "3" >"/proc/sys/vm/drop_caches"
			am kill-all
			sleep 3
			while IFS= read -r pkg_nm; do
				[[ "$pkg_nm" != "com.termux" ]] && [[ "$pkg_nm" != "jackpal.androidterm" ]] && [[ "$pkg_nm" != "yarolegovich.materialterminal" ]] && [[ "$pkg_nm" != "com.google.android.inputmethod.latin" ]] && [[ "$pkg_nm" != "com.termoneplus" ]] && [[ "$pkg_nm" != "com.pittvandewitt.viperfx" ]] && [[ "$pkg_nm" != "com.topjohnwu.magisk" ]] && [[ "$pkg_nm" != "ridmik.keyboard" ]] && [[ "$pkg_nm" != "com.maxmpz.equalizer" ]] && [[ "$pkg_nm" != "com.miui.screenrecorder" ]] && am force-stop "$pkg_nm"
			done <<<"$(pm list packages -e -3 | grep package | cut -f 2 -d ":")"
			echo "${G}Done!${N}"
			sleep 2
			menu
			;;
		"25")
			echo "2" >"/sys/class/thermal/thermal_message/sconfig" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"26")
			echo "0" >"/sys/class/thermal/thermal_message/sconfig" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"27")
			dumpsys batterystats --reset >/dev/null 2>&1
			rm -f /data/system/batterystats-checkin.bin 2>/dev/null
			rm -f /data/system/batterystats-daily.xml 2>/dev/null
			rm -f /data/system/batterystats.bin 2>/dev/null
			rm -rf /data/system/battery-history 2>/dev/null
			rm -rf /data/vendor/charge_logger 2>/dev/null
			rm -rf /data/charge_logger 2>/dev/null
			echo "${G}[*] Done!${N}"
			sleep 2
			menu
			;;
		"28")
			am start -a android.intent.action.VIEW -d https://github.com/pedrozzz0/King-Tweaks/wiki/KTW
			;;
		"29")
			echo "Values supported: [0.3-0.9]"
			echo "Lower means more downscaled / lower resolution"
			echo "[*] Enter a value from the supported range: "
			read -r lvl
			echo "E.G: [com.android.camera]"
			echo "[*] Enter a package name:"
			read -r pkg
			cmd game downscale "$lvl" "$pkg" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"30")
			echo "E.G: [com.android.camera]"
			echo "[*] Enter a package name:"
			read -r pkg
			cmd game downscale disable "$pkg" 2>/dev/null
			[[ $? == "0" ]] && echo "${G}[*] Done!${N}" || echo "${R}[!] Something went wrong!"
			sleep 2
			menu
			;;
		"31")
			echo "[*] Enabling Gapps..."
			pm enable com.google.android.gsf 2>/dev/null
			pm enable com.google.android.gsf.login 2>/dev/null
			pm enable com.google.android.gms 2>/dev/null
			pm enable com.google.android.ims 2>/dev/null
			pm enable com.google.android.apps.carrier.log 2>/dev/null
			pm enable com.android.vending 2>/dev/null
			pm enable com.google.android.play.games 2>/dev/null
			pm enable com.google.android.syncadapters.contacts 2>/dev/null
			echo "${G}[*] Done!${N}"
			sleep 2
			menu
			;;
		"32")
			echo "Killing Gapps..."
			pm disable com.google.android.gsf 2>/dev/null
			pm disable com.google.android.gsf.login 2>/dev/null
			pm disable com.google.android.gms 2>/dev/null
			pm disable com.google.android.ims 2>/dev/null
			pm disable com.google.android.apps.carrier.log 2>/dev/null
			pm disable com.android.vending 2>/dev/null
			pm disable com.google.android.play.games 2>/dev/null
			pm disable com.google.android.syncadapters.contacts 2>/dev/null
			echo "${G}[*] Done!${N}"
			sleep 2
			menu
			;;
		"33")
			[[ "$sdk" -ge "28" ]] && {
			echo "You may need to reboot to apply the changes"
			sed -i 's/debug.hwui.renderer.*/debug.hwui.renderer=opengl/' "$MODDIR/system.prop"
			sed -i 's/ro.hwui.use_vulkan.*/ro.hwui.use_vulkan=/' "$MODDIR/system.prop"
			sed -i '/debug.renderengine.backend/s/.*/debug.renderengine.backend=skiaglthreaded/' "$MODDIR/system.prop"
			echo "${G}[*] Done!${N}"
			sleep 2
			menu
			} || {
			echo "[!] Android version not supported!"
			sleep 2
			menu
			}
			;;
		"34")
			[[ "$sdk" -ge "28" ]] && {
			echo "You may need to reboot to apply the changes"
			sed -i 's/debug.hwui.renderer.*/debug.hwui.renderer=skiagl/' "$MODDIR/system.prop"
			sed -i 's/ro.hwui.use_vulkan.*/ro.hwui.use_vulkan=/' "$MODDIR/system.prop"
			sed -i '/debug.renderengine.backend/s/.*/debug.renderengine.backend=skiaglthreaded/' "$MODDIR/system.prop"
			echo "${G}[*] Done!${N}"
			sleep 2
			menu
			} || {
			echo "[!] Android version not supported!"
			sleep 2
			menu
			}
			;;
		"35")
			[[ "$sdk" -ge "28" ]] && {
			echo "You may need to reboot to apply the changes"
			sed -i 's/debug.hwui.renderer.*/debug.hwui.renderer=/' "$MODDIR/system.prop"
			sed -i 's/ro.hwui.use_vulkan.*/ro.hwui.use_vulkan=true/' "$MODDIR/system.prop"
			sed -i '/debug.renderengine.backend/s/.*/debug.renderengine.backend=skiaglthreaded/' "$MODDIR/system.prop"
			echo "${G}[*] Done!${N}"
			sleep 2
			menu
			} || {
			echo "[!] Android version not supported!"
			sleep 2
			menu
			}
			;;
		"0")
			echo "${G}Hope that see ya soon! ;)${N}"
			;;
		*)
			abort "${R}[!] Unexpected response, aborting...${N}"
			;;
	esac
}

[[ $# -eq "0" ]] && menu

help_me() {
	echo "$MODTITLE $VER($REL)
	by $AUTHOR
	Usage: $_name
	or: $_name [options]...
	Telegram group: https://t.me/kingprojectz
	Supported options:
	-p [profile] [1-6] [change between profiles without opening the terminal GUI]
	-f [free ram] [1-3] [Higher value means more agressive]
	-h [help] [show this message]
	-g [game] [enable DND and disable automatic rotation/brightness]"
	am start -a android.intent.action.VIEW -d https://github.com/pedrozzz0/King-Tweaks/wiki/KTW
	exit
}

while getopts ":p:f:h:g:" opt; do
	case "$opt" in
		p)
			echo "${B}[*] Applying profile...${N}"
			setprop persist.king.tweaks.prof "$2" 2>/dev/null
			echo "${G}[*] Done!${N}"
			;;
		f)
			[[ "$2" == "1" ]] && {
				sync
				echo "3" >"/proc/sys/vm/drop_caches"
				echo "${G}D[*] Done!${N}"
				sleep 2
			} || [[ "$2" == "2" ]] && {
				sync
				echo "3" >"/proc/sys/vm/drop_caches"
				am kill-all
				echo "${G}[*] Done!${N}"
				sleep 3
			} || [[ "$2" == "3" ]] && {
				sync
				echo "3" >"/proc/sys/vm/drop_caches"
				am kill-all
				sleep 3
				while IFS= read -r pkg_nm; do
					[[ "$pkg_nm" != "com.termux" ]] && [[ "$pkg_nm" != "jackpal.androidterm" ]] && [[ "$pkg_nm" != "yarolegovich.materialterminal" ]] && [[ "$pkg_nm" != "com.google.android.inputmethod.latin" ]] && [[ "$pkg_nm" != "com.termoneplus" ]] && [[ "$pkg_nm" != "com.pittvandewitt.viperfx" ]] && [[ "$pkg_nm" != "com.topjohnwu.magisk" ]] && [[ "$pkg_nm" != "ridmik.keyboard" ]] && [[ "$pkg_nm" != "com.maxmpz.equalizer" ]] && [[ "$pkg_nm" != "com.miui.screenrecorder" ]] && am force-stop "$pkg_nm"
				done <<<"$(pm list packages -e -3 | grep package | cut -f 2 -d ":")"
				echo "${G}[*] Done!${N}"
				sleep 2
			}
			;;
		g)
			cmd notification set_dnd priority >/dev/null 2>&1
			settings put system screen_brightness_mode 0 >/dev/null 2>&1
			wm set-user-rotation lock /dev/null 2>&1
			wm user-rotation lock /dev/null 2>&1
			sync
			echo "3" >"/proc/sys/vm/drop_caches"
			am kill-all
			echo "${G}[*] Done!${N}"
			;;
		h | *)
			help_me
			;;
	esac
done
shift $((OPTIND - 1))