#!/system/bin/sh
# Written by Draco (tytydraco @ github).
# Modified by Pedrozzz (pedroginkgo @ telegram pedrozzz0 @ github).

mkdir /sdcard/KTS
LOG=/sdcard/KTS/KTS.log
rm $LOG

# Log in white and continue (unnecessary)
kmsg() {
	echo -e "[*] $@" >> $LOG
	echo -e "[*] $@"
}

kmsg1() {
	echo -e "$@" >> $LOG
	echo -e "$@"
}

write() {
	# Bail out if file does not exist
	[[ ! -f "$1" ]] && return 1

	# Fetch the current key value
	local curval=`cat "$1" 2> /dev/null`
	
	# Bail out if value is already set
	[[ "$curval" == "$2" ]] && return 1
	
	# Make file writable in case it is not already
	chmod +w "$1" 2> /dev/null

	# Write the new value and bail if there's an error
	if ! echo "$2" > "$1" 2> /dev/null
	then
		kmsg "Failed: $1 -> $2"
		return 1
	fi

	# Log the success
	kmsg "$1 $curval -> $2"
}

vibrate_cmode() {
if [ -e /sys/class/leds/vibrator/duration ] &&  [ -e /sys/class/leds/vibrator/activate ]
then
echo 500 > /sys/class/leds/vibrator/duration && echo 1 > /sys/class/leds/vibrator/activate
fi
}

# Check for root permissions and bail if not granted
if [[ "$(id -u)" -ne 0 ]]
then
kmsg "No root permissions. Exiting."
exit 1
fi

# Wait 60s into boot before applying changes
while [[ `cat /proc/uptime | awk '{print $1}' | awk -F. '{print $1}'` -lt 60 ]]
do
	sleep 2
done

setprop persist.spectrum.kernel "KTS Reborn"
setprop spectrum.support "1"

boot_run_once=false
kts_mode=$(getprop persist.spectrum.profile)
[ -z "$kts_mode" ] && setprop persist.spectrum.profile "0"

while true
do
sleep 3
if $boot_run_once
then
[ "$(getprop persist.spectrum.profile)" == "$kts_mode" ] && continue
else
boot_run_once=true
fi
kts_mode=$(getprop persist.spectrum.profile)
loc=/data/adb/modules

# Duration in nanoseconds of one scheduling period
SCHED_PERIOD="$((1 * 1000 * 1000))"

# How many tasks should we have at a maximum in one scheduling period
SCHED_TASKS="8"

# Maximum unsigned integer size in C
UINT_MAX="4294967295"

# Variable to battery %
percentage=$(cat /sys/class/power_supply/battery/capacity)

# Detect other conflicting modules.
if [[ -d $loc/injector ]]
then
kmsg1 "A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
    
elif [[ -d $loc/Pulsar_Engine ]]
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/zeetaatweaks ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/gaming ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/smext ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/fkm_spectrum_injector ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/NetworkTweak ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/MAGNETAR ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/FDE ]] 
then 
kmsg1 "A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/lazy ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[  $(pm list package feravolt) ]] 
then
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/ktweak ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ $(pm list package ktweak) ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/lspeed ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ $(pm list package lspeed) ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ $(pm list package magnetarapp) ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ $(pm list package lsandroid) ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/sqinjector ]]    
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/ZeroLAG ]]    
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/ktks ]]
then
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/ktksr ]]
then
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ $(pm list package kitana) ]]
then
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
fi
	
if [[ "$kts_mode" == "0" ]]
then
kts_profile=BALANCE
        	
elif [[ "$kts_mode" == "1" ]]
then
kts_profile=PERFORMANCE
        	
elif [[ "$kts_mode" == "2" ]]
then
kts_profile=BATTERY
        	
elif [[ "$kts_mode" == "3" ]]
then
kts_profile=GAMING
fi

case "$kts_profile" in
     # Balance Profile
        "BALANCE") {
        	init=$(date +%s)
kmsg1 "----------------------------------------------------- Info -------------------------------------------------------------------------------------------------"
kmsg1 "                                            üïõ Date of execution: $(date)                                                                                   " 
kmsg1 "                                            üîß Kernel: `uname -a`                                                                                           "
kmsg1 "                                            üõ†Ô∏è SOC: $(getprop ro.board.platform)                                                                            "
kmsg1 "                                            ‚öôÔ∏è SDK: $(getprop ro.build.version.sdk)                                                                         "
kmsg1 "                                            üÖ∞Ô∏èndroid Version: $(getprop ro.build.version.release)                                                           "
kmsg1 "                                            üì± Device: $(getprop ro.product.odm.model)                                                                      "
kmsg1 "                                            üëë KTS Version: 1.8.5                                                                                           "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------------------"

	kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	kmsg1 "                                          ENABLING $kts_profile PROFILE...                                                                       "
	kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	       	
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING THERMAL-ENGINE AND PERFD...                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
        	
# Enable throttling and perfd
start thermal-engine
start perfd
        	
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING I/O SCHEDULER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# I/O Scheduler Tweaks.
for queue in /sys/block/*/queue/
do
avail_scheds="$(cat "${queue}scheduler")"
for sched in cfq noop zen anxiety deadline kyber bfq bfq-sq mq-deadline none
do
if [[ "$avail_scheds" == *"$sched"* ]]
then
write "${queue}scheduler" "$sched"
break
fi
done 
write "${queue}add_random" 0
write "${queue}iostats" 0
write "${queue}read_ahead_kb" 128
write "${queue}iosched/low_latency" 1
write "${queue}nomerges" 1
write "${queue}rq_affinity" 2
write "${queue}nr_requests" 64
done

# Reserve 90% IO bandwith for foreground tasks
if [[ -d "/dev/blkio" ]]
then
write "/dev/blkio/blkio.weight" "1000"
write "/dev/blkio/blkio.leaf_weight" "1000"
write "/dev/blkio/background/blkio.weight" "100"
write "/dev/blkio/background/blkio.leaf_weight" "100"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         TWEAKING CPU...                                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# CPU Tweaks
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/
do
avail_govs=`cat "${cpu}scaling_available_governors"`
if [[ "$avail_govs" == *"schedutil"* ]]
then
write "${cpu}scaling_governor" schedutil
write "${cpu}schedutil/up_rate_limit_us" "$((SCHED_PERIOD / 1000))"
write "${cpu}schedutil/down_rate_limit_us" "$((4 * SCHED_PERIOD / 1000))"
write "${cpu}schedutil/iowait_boost_enable" "0"
write "${cpu}schedutil/rate_limit_us" "$((SCHED_PERIOD / 1000))"
write "${cpu}schedutil/hispeed_load" "85"
write "${cpu}schedutil/hispeed_freq" "$UINT_MAX"
elif [[ "$avail_govs" == *"interactive"* ]]
then
write "${cpu}scaling_governor" interactive
write "${cpu}interactive/timer_rate" "$((SCHED_PERIOD / 1000))"
write "${cpu}interactive/timer_slack" "-1"
write "${cpu}interactive/boost" "0"
write "${cpu}interactive/use_migration_notif" "1" 
write "${cpu}interactive/use_sched_load" "1"
write "${cpu}interactive/boostpulse" "0"
write "${cpu}interactive/fastlane" "1"
write "${cpu}interactive/fast_ramp_down" "0"
write "${cpu}interactive/sampling_rate" "10000"
write "${cpu}interactive/sampling_rate_min" "10000"
write "${cpu}interactive/min_sample_time" "$((SCHED_PERIOD / 1000))"
write "${cpu}interactive/go_hispeed_load" "85"
write "${cpu}interactive/hispeed_freq" "$UINT_MAX"
fi
done

write "/sys/devices/system/cpu/cpu1/online" "1"
write "/sys/devices/system/cpu/cpu2/online" "1"
write "/sys/devices/system/cpu/cpu5/online" "1"
write "/sys/devices/system/cpu/cpu6/online" "1"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING GPU...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	
# GPU Tweaks.
for gpu in /sys/class/kgsl/kgsl-3d0/
do
if [[ -d "/sys/class/kgsl/kgsl-3d0" ]]
then
write "${gpu}throttling" "1"
write "${gpu}thermal_pwrlevel" "3"
write "${gpu}devfreq/adrenoboost" "0"
write "${gpu}force_no_nap" "0"
write "${gpu}bus_split" "1"
write "${gpu}devfreq/min_freq" "100000000"
write "${gpu}devfreq/max_freq" "$UINT_MAX"
write "${gpu}default_pwrlevel" `cat /sys/class/kgsl/kgsl-3d0/min_pwrlevel`
write "${gpu}force_bus_on" "0"
write "${gpu}force_clk_on" "0"
write "${gpu}force_rail_on" "0"
write "${gpu}devfreq/polling_interval" "10"
write "${gpu}idle_timer" "76"
fi
done

if [[ -e "/proc/gpufreq/gpufreq_limited_thermal_ignore" ]] 
then
write "/proc/gpufreq/gpufreq_limited_thermal_ignore" "0"
fi

# Enable dvfs
if [[ -e "/proc/mali/dvfs_enable" ]] 
then
write "/proc/mali/dvfs_enable" "1"
fi

if [[ -e "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" ]] 
then
write "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" "1"
fi

if [[ -e "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" ]]
then
write "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING AND TWEAKING ADRENO IDLER...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable and tweak adreno idler
if [[ -d "/sys/module/adreno_idler" ]]
then
write "/sys/module/adreno_idler/parameters/adreno_idler_active" "Y"
write "/sys/module/adreno_idler/parameters/adreno_idler_idleworkload" "6000"
write "/sys/module/adreno_idler/parameters/adreno_idler_downdifferential" "25"
write "/sys/module/adreno_idler/parameters/adreno_idler_idlewait" "25"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING LMK...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Low Memory Killer tweaks.
for lmk in /sys/module/lowmemorykiller/parameters/
do
if [[ -d "/sys/module/lowmemorykiller" ]]
then
write "${lmk}enable_lmk" "1"
write "${lmk}enable_adaptive_lmk" "0"
write "${lmk}minfree" "21816,29088,36360,43632,50904,65448"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING DEBUGGERS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable debuggers.
for bl in /sys/module/bluetooth/parameters/
do
if [[ -e "${bl}disable_ertm" ]]
then
write "${bl}disable_ertm" "Y"
write "${bl}disable_esco" "Y"
fi
done

write "/sys/module/earlysuspend/parameters/debug_mask" "0"
write "/sys/module/alarm/parameters/debug_mask" "0"
write "/sys/module/alarm_dev/parameters/debug_mask" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/devices/system/edac/cpu/log_ce" "0"
write "/sys/devices/system/edac/cpu/log_ue" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/module/debug/parameters/enable_event_log" "0"
write "/sys/module/dwc3/parameters/ep_addr_rxdbg_mask" "0"
write "/sys/module/dwc3/parameters/ep_addr_txdbg_mask" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ce" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ue" "0"
write "/sys/module/glink/parameters/debug_mask" "0"
write "/sys/module/hid_apple/parameters/fnmode" "0"
write "/sys/module/hid_magicmouse/parameters/emulate_3button" "N"
write "/sys/module/hid_magicmouse/parameters/emulate_scroll_wheel" "N"
write "/sys/module/ip6_tunnel/parameters/log_ecn_error" "N"
write "/sys/module/lowmemorykiller/parameters/debug_level" "0"
write "/sys/module/mdss_fb/parameters/backlight_dimmer" "N"
write "/sys/module/msm_show_resume_irq/parameters/debug_mask" "0"
write "/sys/module/msm_smd/parameters/debug_mask" "0"
write "/sys/module/msm_smem/parameters/debug_mask" "0"
write "/sys/module/otg_wakelock/parameters/enabled" "N" 
write "/sys/module/service_locator/parameters/enable" "0"
write "/sys/module/sit/parameters/log_ecn_error" "N"
write "/sys/module/smem_log/parameters/log_enable" "0"
write "/sys/module/smp2p/parameters/debug_mask" "0"
write "/sys/module/touch_core_base/parameters/debug_mask" "0"
write "/sys/module/usb_bam/parameters/enable_event_log" "0"
write "/sys/module/printk/parameters/console_suspend" "Y"
write "/proc/sys/debug/exception-trace" "0"
write "/proc/sys/kernel/printk" "0 0 0 0"
write "/proc/sys/kernel/compat-log" "0"

if [[ -e "/sys/module/mali/parameters/mali_debug_level" ]] 
then
write "/sys/module/mali/parameters/mali_debug_level" "0"
fi

if [[ -e "/sys/module/logger/parameters/log_mode" ]] 
then
write "/sys/module/logger/parameters/log_mode" "2"
fi

if [[ -e "/sys/module/printk/parameters/console_suspend" ]] 
then
write "/sys/module/printk/parameters/console_suspend" "Y"
fi

for i in $(find /sys/ -name debug_mask)
do
write "$i" "0"
done

for i in $(find /sys/ -name debug_level)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ce)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ue)
do
write "$i" "0"
done

for i in $(find /sys/ -name enable_event_log) 
do
write "$i" "0"
done

for i in $(find /sys/ -name log_ecn_error)
do
write "$i" "N"
done

for i in $(find /sys/ -name snapshot_crashdumper)
do
write "$i" "0"
done

if [[ -e "/sys/module/ext4/parameters/mballoc_debug" ]] 
then
write "/sys/module/ext4/parameters/mballoc_debug" "0"
fi

# =========
# FIX DEEPSLEEP
# =========
for i in $(ls /sys/class/scsi_disk/)
do
lock_val 'temporary none' '/sys/class/scsi_disk/$i/cache_type'
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDTUNE TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Schedtune Tweaks
for st in /dev/stune
do
if [[ -d "/dev/stune" ]]
then
write "${st}/background/schedtune.boost" "0"
write "${st}/background/schedtune.prefer_idle" "0"

write "${st}/foreground/schedtune.boost" "1"
write "${st}/foreground/schedtune.prefer_idle" "1"

write "${st}/rt/schedtune.boost" "0"
write "${st}/rt/schedtune.prefer_idle" "0"

write "${st}/top-app/schedtune.boost" "5"
write "${st}/top-app/schedtune.prefer_idle" "1"

write "${st}/schedtune.boost" "0"
write "${st}/schedtune.prefer_idle" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING FS TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# FS tweaks.
for fs in /proc/sys/fs/
do
if [[ -d "/proc/sys/fs" ]]
then
write "${fs}dir-notify-enable" "0"
write "${fs}lease-break-time" "20"
write "${fs}leases-enable" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING DYNAMIC FSYNC...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable dynamic_fsync.
if [[ -e "/sys/kernel/dyn_fsync/Dyn_fsync_active" ]]
then
chmod 666 /sys/kernel/dyn_fsync/Dyn_fsync_active
chown root /sys/kernel/dyn_fsync/Dyn_fsync_active
write "/sys/kernel/dyn_fsync/Dyn_fsync_active" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDULER TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Scheduler tweaks. 
for sched in /sys/kernel/debug/
do
if [[ -e "/sys/kernel/debug/sched_features" ]]
then
write "${sched}sched_features" "NEXT_BUDDY"
write "${sched}sched_features" "TTWU_QUEUE"
write "${sched}sched_features" "GENTLE_FAIR_SLEEPERS"
write "${sched}sched_features" "WAKEUP_PREEMPTION"
write "${sched}sched_features" "ARCH_POWER"
fi
done
 
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ONEPLUS CHAIN...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# OP Chain disable.
for opc in /sys/module/opchain/parameters/
do
if [[ -d "/sys/module/opchain" ]]
then
write "${opc}chain_on" "0"
fi
done
 
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING KERNEL SETTINGS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Tweak some kernel settings to improve overall performance.
for kts in /proc/sys/kernel/
do
write "${kts}sched_child_runs_first" "1"
write "${kts}perf_cpu_time_max_percent" "5"
write "${kts}sched_autogroup_enabled" "1"
write "${kts}random/read_wakeup_threshold" "64"
write "${kts}random/write_wakeup_threshold" "256"
write "${kts}random/urandom_min_reseed_secs" "90"
write "${kts}sched_tunable_scaling" "0"
write "${kts}sched_latency_ns" "$SCHED_PERIOD"
write "${kts}sched_min_granularity_ns" "$((SCHED_PERIOD / SCHED_TASKS))"
write "${kts}sched_wakeup_granularity_ns" "$((SCHED_PERIOD / 2))"
write "${kts}sched_migration_cost_ns" "5000000"
write "${kts}sched_min_task_util_for_colocation" "0"
write "${kts}sched_nr_migrate" "8"
write "${kts}sched_schedstats" "0"
write "${kts}printk_devkmsg" "off"
done

# Use RCU_normal instead of RCU_expedited for improved real-time latency, CPU utilization and energy efficiency.
if [[ -e "/sys/kernel/rcu_expedited" ]]
then
write /sys/kernel/rcu_expedited 0
write /sys/kernel/rcu_normal 1
fi

if [[ -e "/sys/power/pm_freeze_timeout" ]] 
then
write "/sys/power/pm_freeze_timeout" "2500"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FINGERPRINT BOOST...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable fingerprint boost.
if [[ -e "/sys/kernel/fp_boost/enabled" ]]
then
write "/sys/kernel/fp_boost/enabled" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          SETTING MIN AND MAX CPU FREQUENCY...                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Set min and max clocks.
for minclk in /sys/devices/system/cpu/cpufreq/policy*/
do
if [[ -e "${minclk}scaling_min_freq" ]]
then
write "${minclk}scaling_min_freq" "300000"
write "${minclk}scaling_max_freq" "20000000"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING CPUIDLE USE DEEPEST STATE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/devices/system/cpu/cpuidle/use_deepest_state" ]] 
then
write "/sys/devices/system/cpu/cpuidle/use_deepest_state" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING KRAIT VOLTAGE BOOST...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable krait voltage boost
if [[ -e "/sys/module/acpuclock_krait/parameters/boost" ]] 
then
write "/sys/module/acpuclock_krait/parameters/boost" "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING VM TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

sync

# VM settings to improve overall user experience and smoothness.
for vm in /proc/sys/vm/
do
write "${vm}drop_caches" "3"
write "${vm}dirty_background_ratio" "10"
write "${vm}dirty_ratio" "30"
write "${vm}dirty_expire_centisecs" "2000"
write "${vm}dirty_writeback_centisecs" "2000"
write "${vm}page-cluster" "0"
write "${vm}stat_interval" "10"
write "${vm}swap_ratio_enable" "1"
write "${vm}swap_ratio" "100"
write "${vm}swappiness" "100"
write "${vm}vfs_cache_pressure" "60"
write "/sys/module/process_reclaim/parameters/enable_process_reclaim" "0"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING MSM THERMAL SETTINGS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# MSM thermal
if [[ -d "/sys/module/msm_thermal" ]]
then
write /sys/module/msm_thermal/vdd_restriction/enabled "0"
write /sys/module/msm_thermal/core_control/enabled "1"
write /sys/module/msm_thermal/parameters/enabled "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING POWER EFFICIENT WORKQUEUE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable power efficient workqueue.
for wqpw in /sys/module/workqueue/parameters/
do
if [[ -e "${wqpw}power_efficient" ]]
then 
write "${wqpw}power_efficient" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          FIXING DOUBLE TAP TO WAKEUP...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Fix DT2W.
for dt in /sys/touchpanel/
do
if [[ -e "/sys/touchpanel/double_tap" ]]
then
write "${dt}double_tap" "1"
fi
done

if [[ -e "/proc/tp_gesture" ]]
then
write "/proc/tp_gesture" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING MSM TOUCH BOOST...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable touch boost on balance and battery profile.
if [[ -e /sys/module/msm_performance/parameters/touchboost ]]
then
write "/sys/module/msm_performance/parameters/touchboost" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING INTERNET TWEAKS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Internet Tweaks
for tcp in /proc/sys/net/ipv4/
do
write "${tcp}ip_no_pmtu_disc" "0"
write "${tcp}tcp_ecn" "2"
write "${tcp}tcp_timestamps" "0"
write "${tcp}route.flush" "1"
write "${tcp}tcp_rfc1337" "1"
write "${tcp}tcp_tw_reuse" "1"
write "${tcp}tcp_sack" "1"
write "${tcp}tcp_fack" "1"
write "${tcp}tcp_fastopen" "3"
write "${tcp}tcp_tw_recycle" "1"
write "${tcp}tcp_syncookies" "0"
write "${tcp}tcp_window_scaling" "1"
write "${tcp}tcp_keepalive_probes" "10"
write "${tcp}tcp_keepalive_intvl" "30"
write "${tcp}tcp_fin_timeout" "30"
write "${tcp}tcp_low_latency" "1"
write "${tcp}tcp_congestion_control" "bbr2"
done

# Tweak and decrease tx_queue_len default stock value(s) for less amount of generated bufferbloat and for gaining slightly faster network speed and performance;
for i in $(find /sys/class/net -type l)
do
write "$i/tx_queue_len" "128"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          CALIBRATING TOUCH...                                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Touch calibration
panel=$(cat /sys/class/graphics/fb0/modes)
if [[ "${panel:5:1}" == "x" ]]
then
panel=${panel:2:3}
else
panel=${panel:2:4}
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          RENICING SOME PROCESSES...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

### Phone dialer app ###
renice -1 `pidof com.android.phone`

### System apps ###
renice -1 `pidof com.android.mms` # Text message app
renice -1 `pidof com.swype.android.inputmethod` # Keyboard
renice -1 `pidof com.sec.android.app.controlpanel` # Task manager
renice -1 `pidof com.android.systemui` # System UI
renice -1 `pidof com.android.settings` # Settings menu
renice -1 `pidof com.android.vending` # Market app
renice -1 `pidof com.sec.android.app.camera` # Camera app
renice -1 `pidof android.process.acore`
renice -1 `pidof kondemand/0`
renice -1 `pidof ksmartass_up/0`

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING BATTERY SAVER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable battery saver
for bs in /sys/module/battery_saver/parameters/
do
if [[ -e "/sys/module/battery_saver/parameters/enabled" ]]
then
write "${bs}enabled" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING LPM SLEEP...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable LPM sleep in balanced / battery profile
for lpm in /sys/module/lpm_levels/parameters/
do
if [[ -d "/sys/module/lpm_levels" ]]
then
write "${lpm}sleep_disabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu0/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu1/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu2/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu3/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu4/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu5/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu6/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu7/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-dynret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/perf-l2-dynret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/perf-l2-ret/idle_enabled" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING PM2 IDLE SLEEP MODE...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/pm2/parameters/idle_sleep_mode" ]] 
then
write "/sys/module/pm2/parameters/idle_sleep_mode" "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LCD POWER REDUCE...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/class/lcd/panel/power_reduce" ]] 
then
write "/sys/class/lcd/panel/power_reduce" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING GENTLE FAIR SLEEPERS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/kernel/sched/gentle_fair_sleepers" ]]
then
write "/sys/kernel/sched/gentle_fair_sleepers" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FORCE FAST CHARGING...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable Fast Charging Rate
for ffc in /sys/kernel/fast_charge/
do
if [[ -e "/sys/kernel/fast_charge/force_fast_charge" ]]
then
write "${ffc}force_fast_charge" "1"
fi
done
  
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          KILLING GMS PROCESSES...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# GMS blocker 1.2 by pedrozzz
killall -9 com.google.android.gms
killall -9 com.google.android.gms.persistent
killall -9 com.google.process.gapps
killall -9 com.google.android.gsf
killall -9 com.google.android.gsf.persistent

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          $kts_profile PROFILE APPLIED WITH SUCCESS.                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          END OF EXECUTION: $(date)                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
exit=$(date +%s)

exectime=$((exit - init))
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          EXECUTION DONE IN $exectime SECONDS.                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
vibrate_cmode
};;
    # Performance Profile
        "PERFORMANCE") {
        	init=$(date +%s)
kmsg1 "----------------------------------------------------- Info -------------------------------------------------------------------------------------------------"
kmsg1 "                                            üïõ Date of execution: $(date)                                                                                   "
kmsg1 "                                            üîß Kernel: `uname -a`                                                                                           "
kmsg1 "                                            üõ†Ô∏è SOC: $(getprop ro.board.platform)                                                                            "
kmsg1 "                                            ‚öôÔ∏è SDK: $(getprop ro.build.version.sdk)                                                                         "
kmsg1 "                                            üÖ∞Ô∏èndroid Version: $(getprop ro.build.version.release)                                                           "
kmsg1 "                                            üì± Device: $(getprop ro.product.odm.model)                                                                      "
kmsg1 "                                            üëë KTS Version: 1.8.5                                                                                           "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------------------"

	kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	kmsg1 "                                        ENABLING $kts_profile PROFILE...                                                                         "
	kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
		
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                        DISABLING THERMAL-ENGINE AND ENABLING PERFD...                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable throttling and enable perfd.
stop thermal-engine
start perfd

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING CPU INPUT BOOST...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Caf CPU Boost
for caf in /sys/module/cpu_boost/parameters/
do
if [[ -d "/sys/module/cpu_boost" ]]
then
write "${caf}input_boost_freq" "0:$UINT_MAX 1:$UINT_MAX 2:$UINT_MAX 3:$UINT_MAX 4:$UINT_MAX 5:$UINT_MAX 6:$UINT_MAX 7:$UINT_MAX"
write "${caf}input_boost_ms" "64"
fi
done

# CPU Boost
for cib in /sys/module/cpu_input_boost/parameters/
do
if [[ -d "/sys/module/cpu_input_boost" ]]
then
write "${cib}input_boost_duration" "64"
write "${cib}input_boost_freq_hp" "$UINT_MAX"
write "${cib}input_boost_freq_lp" "$UINT_MAX"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING I/O SCHEDULER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# I/O Scheduler Tweaks.
for queue in /sys/block/*/queue/
do
avail_scheds="$(cat "${queue}scheduler")"
for sched in cfq noop zen anxiety deadline kyber bfq bfq-sq mq-deadline none
do
if [[ "$avail_scheds" == *"$sched"* ]]
then
write "${queue}scheduler" "$sched"
break
fi
done
write "${queue}add_random" 0
write "${queue}iostats" 0
write "${queue}read_ahead_kb" 512
write "${queue}iosched/low_latency" 0
write "${queue}nomerges" 1
write "${queue}rq_affinity" 2
write "${queue}nr_requests" 64
done

# Reserve 90% IO bandwith for foreground tasks
if [[ -d "/dev/blkio" ]]
then
write "/dev/blkio/blkio.weight" "1000"
write "/dev/blkio/blkio.leaf_weight" "1000"
write "/dev/blkio/background/blkio.weight" "100"
write "/dev/blkio/background/blkio.leaf_weight" "100"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         TWEAKING CPU...                                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# CPU Tweaks
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/
do
avail_govs=`cat "${cpu}scaling_available_governors"`
if [[ "$avail_govs" == *"schedutil"* ]]
then
write "${cpu}scaling_governor" schedutil
write "${cpu}schedutil/up_rate_limit_us" "$((SCHED_PERIOD / 1000))"
write "${cpu}schedutil/down_rate_limit_us" "$((4 * SCHED_PERIOD / 1000))"
write "${cpu}schedutil/iowait_boost_enable" "0"
write "${cpu}schedutil/rate_limit_us" "$((SCHED_PERIOD / 1000))"
write "${cpu}schedutil/hispeed_load" "80"
write "${cpu}schedutil/hispeed_freq" "$UINT_MAX"
elif [[ "$avail_govs" == *"interactive"* ]]
then
write "${cpu}scaling_governor" interactive
write "${cpu}interactive/timer_rate" "$((SCHED_PERIOD / 1000))"
write "${cpu}interactive/timer_slack" "-1"
write "${cpu}interactive/boost" "1"
write "${cpu}interactive/boostpulse" "1"
write "${cpu}interactive/boostpulse_duration" "640000"
write "${cpu}interactive/fast_ramp_down" "0"
write "${cpu}interactive/sampling_rate" "5000"
write "${cpu}interactive/sampling_rate_min" "5000"
write "${cpu}interactive/min_sample_time" "$((SCHED_PERIOD / 1000))"
write "${cpu}interactive/go_hispeed_load" "80"
write "${cpu}interactive/hispeed_freq" "$UINT_MAX"
fi
done
	
write "/sys/devices/system/cpu/cpu1/online" "1"
write "/sys/devices/system/cpu/cpu2/online" "1"
write "/sys/devices/system/cpu/cpu5/online" "1"
write "/sys/devices/system/cpu/cpu6/online" "1"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING GPU...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	
# GPU Tweaks.
for gpu in /sys/class/kgsl/kgsl-3d0/
do
if [[ -d "/sys/class/kgsl/kgsl-3d0" ]]
then
write "${gpu}throttling" "1"
write "${gpu}thermal_pwrlevel" "0"
write "${gpu}devfreq/adrenoboost" "0"
write "${gpu}force_no_nap" "0"
write "${gpu}bus_split" "1"
write "${gpu}devfreq/min_freq" "100000000"
write "${gpu}devfreq/max_freq" "$UINT_MAX"
write "${gpu}default_pwrlevel" `cat /sys/class/kgsl/kgsl-3d0/min_pwrlevel`
write "${gpu}force_bus_on" "0"
write "${gpu}force_clk_on" "0"
write "${gpu}force_rail_on" "0"
write "${gpu}devfreq/polling_interval" "16"
write "${gpu}idle_timer" "60"
fi
done

if [[ -e "/proc/gpufreq/gpufreq_limited_thermal_ignore" ]] 
then
write "/proc/gpufreq/gpufreq_limited_thermal_ignore" "0"
fi

# Enable dvfs
if [[ -e "/proc/mali/dvfs_enable" ]] 
then
write "/proc/mali/dvfs_enable" "1"
fi

if [[ -e "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" ]] 
then
write "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" "1"
fi

if [[ -e "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" ]]
then
write "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING AND TWEAKING ADRENO IDLER...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable and tweak adreno idler
if [[ -d "/sys/module/adreno_idler" ]]
then
write "/sys/module/adreno_idler/parameters/adreno_idler_active" "Y"
write "/sys/module/adreno_idler/parameters/adreno_idler_idleworkload" "5000"
write "/sys/module/adreno_idler/parameters/adreno_idler_downdifferential" "15"
write "/sys/module/adreno_idler/parameters/adreno_idler_idlewait" "15"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING LMK...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Low Memory Killer Tweaks.
for lmk in /sys/module/lowmemorykiller/parameters/
do
if [[ -d "/sys/module/lowmemorykiller" ]]
then
write "${lmk}enable_lmk" "1"
write "${lmk}enable_adaptive_lmk" "0"
write "${lmk}minfree" "21816,29088,36360,43632,50904,65448"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING DEBUGGERS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable debuggers.
for bl in /sys/module/bluetooth/parameters/
do
if [[ -e "${bl}disable_ertm" ]]
then
write "${bl}disable_ertm" "Y"
write "${bl}disable_esco" "Y"
fi
done

write "/sys/module/earlysuspend/parameters/debug_mask" "0"
write "/sys/module/alarm/parameters/debug_mask" "0"
write "/sys/module/alarm_dev/parameters/debug_mask" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/devices/system/edac/cpu/log_ce" "0"
write "/sys/devices/system/edac/cpu/log_ue" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/module/debug/parameters/enable_event_log" "0"
write "/sys/module/dwc3/parameters/ep_addr_rxdbg_mask" "0"
write "/sys/module/dwc3/parameters/ep_addr_txdbg_mask" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ce" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ue" "0"
write "/sys/module/glink/parameters/debug_mask" "0"
write "/sys/module/hid_apple/parameters/fnmode" "0"
write "/sys/module/hid_magicmouse/parameters/emulate_3button" "N"
write "/sys/module/hid_magicmouse/parameters/emulate_scroll_wheel" "N"
write "/sys/module/ip6_tunnel/parameters/log_ecn_error" "N"
write "/sys/module/lowmemorykiller/parameters/debug_level" "0"
write "/sys/module/mdss_fb/parameters/backlight_dimmer" "N"
write "/sys/module/msm_show_resume_irq/parameters/debug_mask" "0"
write "/sys/module/msm_smd/parameters/debug_mask" "0"
write "/sys/module/msm_smem/parameters/debug_mask" "0"
write "/sys/module/otg_wakelock/parameters/enabled" "N" 
write "/sys/module/service_locator/parameters/enable" "0"
write "/sys/module/sit/parameters/log_ecn_error" "N"
write "/sys/module/smem_log/parameters/log_enable" "0"
write "/sys/module/smp2p/parameters/debug_mask" "0"
write "/sys/module/touch_core_base/parameters/debug_mask" "0"
write "/sys/module/usb_bam/parameters/enable_event_log" "0"
write "/sys/module/printk/parameters/console_suspend" "Y"
write "/proc/sys/debug/exception-trace" "0"
write "/proc/sys/kernel/printk" "0 0 0 0"
write "/proc/sys/kernel/compat-log" "0"

if [ -e /sys/module/logger/parameters/log_mode ]
then
write "/sys/module/logger/parameters/log_mode" "2"
fi

if [ -e /sys/module/printk/parameters/console_suspend ] 
then
write "/sys/module/printk/parameters/console_suspend" "Y"
fi

for i in $(find /sys/ -name debug_mask)
do
write "$i" "0"
done

for i in $(find /sys/ -name debug_level)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ce)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ue)
do
write "$i" "0"
done

for i in $(find /sys/ -name enable_event_log) 
do
write "$i" "0"
done

for i in $(find /sys/ -name log_ecn_error)
do
write "$i" "N"
done

for i in $(find /sys/ -name snapshot_crashdumper)
do
write "$i" "0"
done

if [[ -e "/sys/module/ext4/parameters/mballoc_debug" ]] 
then
write "/sys/module/ext4/parameters/mballoc_debug" "0"
fi

# =========
# FIX DEEPSLEEP
# =========
for i in $(ls /sys/class/scsi_disk/)
do
lock_val 'temporary none' '/sys/class/scsi_disk/$i/cache_type'
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDTUNE TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Schedtune Tweaks
for st in /dev/stune
do
if [[ -d "/dev/stune" ]]
then
write "${st}/background/schedtune.boost" "0"
write "${st}/background/schedtune.prefer_idle" "0"

write "${st}/foreground/schedtune.boost" "40"
write "${st}/foreground/schedtune.prefer_idle" "1"

write "${st}/rt/schedtune.boost" "0"
write "${st}/rt/schedtune.prefer_idle" "0"

write "${st}/top-app/schedtune.boost" "40"
write "${st}/top-app/schedtune.prefer_idle" "1"

write "${st}/schedtune.boost" "0"
write "${st}/schedtune.prefer_idle" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING FS TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# FS Tweaks.
for fs in /proc/sys/fs/
do
if [[ -d "/proc/sys/fs" ]]
then
write "${fs}dir-notify-enable" "0"
write "${fs}lease-break-time" "20"
write "${fs}leases-enable" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING DYNAMIC FSYNC...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable dynamic_fsync.
if [[ -e "/sys/kernel/dyn_fsync/Dyn_fsync_active" ]]
then
chmod 666 /sys/kernel/dyn_fsync/Dyn_fsync_active
chown root /sys/kernel/dyn_fsync/Dyn_fsync_active
write "/sys/kernel/dyn_fsync/Dyn_fsync_active" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDULER TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Scheduler features.
for sched in /sys/kernel/debug/
do
if [[ -e "/sys/kernel/debug/sched_features" ]]
then
write "${sched}sched_features" "NEXT_BUDDY"
write "${sched}sched_features" "TTWU_QUEUE"
write "${sched}sched_features" "NO_GENTLE_FAIR_SLEEPERS"
write "${sched}sched_features" "NO_WAKEUP_PREEMPTION"
fi
done
	
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ONEPLUS CHAIN...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# OP Tweaks
for opc in /sys/module/opchain/parameters/
do
if [[ -d "/sys/module/opchain" ]]
then
write "${opc}chain_on" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING KERNEL SETTINGS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Tweak some kernel settings to improve overall performance.
for kts in /proc/sys/kernel/
do
write "${kts}sched_child_runs_first" "1"
write "${kts}perf_cpu_time_max_percent" "5"
write "${kts}sched_autogroup_enabled" "1"
write "${kts}random/read_wakeup_threshold" "64"
write "${kts}random/write_wakeup_threshold" "896"
sysctl -e -w kernel.random.urandom_min_reseed_secs=90
write "${kts}sched_tunable_scaling" "0"
write "${kts}sched_latency_ns" "$SCHED_PERIOD"
write "${kts}sched_min_granularity_ns" "$((SCHED_PERIOD / SCHED_TASKS))"
write "${kts}sched_wakeup_granularity_ns" "$((SCHED_PERIOD / 2))"
write "${kts}sched_migration_cost_ns" "5000000"
write "${kts}sched_min_task_util_for_colocation" "0"
write "${kts}sched_nr_migrate" "8"
write "${kts}sched_schedstats" "0"
write "${kts}printk_devkmsg" "off"
done

# Use RCU_normal instead of RCU_expedited for improved real-time latency, CPU utilization and energy efficiency.
if [[ -e "/sys/kernel/rcu_expedited" ]]
then
write /sys/kernel/rcu_expedited 0
write /sys/kernel/rcu_normal 1
fi

if [[ -e "/sys/power/pm_freeze_timeout" ]] 
then
write "/sys/power/pm_freeze_timeout" "2500"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FINGERPRINT BOOST...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable fingerprint boost.
if [[ -e "/sys/kernel/fp_boost/enabled" ]]
then
write "/sys/kernel/fp_boost/enabled" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          SETTING MIN AND MAX CPU FREQUENCY...                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Set max clocks in gaming / performance profile.
for minclk in /sys/devices/system/cpu/cpufreq/policy*/
do
if [[ -e "${minclk}scaling_min_freq" ]]
then
write "${minclk}scaling_min_freq" "20000000"
write "${minclk}scaling_max_freq" "20000000"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         DISABLING CPUIDLE USE DEEPEST STATE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/devices/system/cpu/cpuidle/use_deepest_state" ]] 
then
write "/sys/devices/system/cpu/cpuidle/use_deepest_state" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING KRAIT VOLTAGE BOOST...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable krait voltage boost
if [[ -e "/sys/module/acpuclock_krait/parameters/boost" ]] 
then
write "/sys/module/acpuclock_krait/parameters/boost" "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING VM TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

sync

# VM settings to improve overall user experience and performance.
for vm in /proc/sys/vm/
do
write "${vm}drop_caches" "3"
write "${vm}dirty_background_ratio" "10"
write "${vm}dirty_ratio" "15"
write "${vm}dirty_expire_centisecs" "1000"
write "${vm}dirty_writeback_centisecs" "550"
write "${vm}page-cluster" "0"
write "${vm}stat_interval" "30"
write "${vm}swappiness" "100"
write "${vm}swap_ratio_enable" "1"
write "${vm}swap_ratio" "100"
write "${vm}vfs_cache_pressure" "75"
write "/sys/module/process_reclaim/parameters/enable_process_reclaim" "0"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING MSM THERMAL SETTINGS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# MSM thermal
if [[ -d "/sys/module/msm_thermal" ]]
then
write /sys/module/msm_thermal/vdd_restriction/enabled "0"
write /sys/module/msm_thermal/core_control/enabled "0"
write /sys/module/msm_thermal/parameters/enabled "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING POWER EFFICIENT WORKQUEUE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Workqueue disable power_efficient.
for wqpw in /sys/module/workqueue/parameters/
do
if [[ -e "${wqpw}power_efficient" ]]
then 
write "${wqpw}power_efficient" "N" 
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          FIXING DOUBLE TAP TO WAKEUP...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Fix DT2W
for dt in /sys/touchpanel/
do
if [[ -e "/sys/touchpanel/double_tap" ]]
then
write "${dt}double_tap" "1"
fi
done

if [[ -e "/proc/tp_gesture" ]]
then
write "/proc/tp_gesture" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING MSM TOUCH BOOST...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable touch boost on gaming and performance profile.
if [[ -e /sys/module/msm_performance/parameters/touchboost ]]
then
write "/sys/module/msm_performance/parameters/touchboost" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING INTERNET TWEAKS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Internet Tweaks
for tcp in /proc/sys/net/ipv4/
do
write "${tcp}ip_no_pmtu_disc" "0"
write "${tcp}tcp_ecn" "2"
write "${tcp}tcp_timestamps" "0"
write "${tcp}route.flush" "1"
write "${tcp}tcp_rfc1337" "1"
write "${tcp}tcp_tw_reuse" "1"
write "${tcp}tcp_sack" "1"
write "${tcp}tcp_fack" "1"
write "${tcp}tcp_fastopen" "3"
write "${tcp}tcp_tw_recycle" "1"
write "${tcp}tcp_syncookies" "0"
write "${tcp}tcp_window_scaling" "1"
write "${tcp}tcp_keepalive_probes" "10"
write "${tcp}tcp_keepalive_intvl" "30"
write "${tcp}tcp_fin_timeout" "30"
write "${tcp}tcp_low_latency" "1"
write "${tcp}tcp_congestion_control" "bbr2"
done

# Tweak and decrease tx_queue_len default stock value(s) for less amount of generated bufferbloat and for gaining slightly faster network speed and performance;
for i in $(find /sys/class/net -type l)
do
write "$i/tx_queue_len" "128"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          CALIBRATING TOUCH...                                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Touch calibration
panel=$(cat /sys/class/graphics/fb0/modes)
if [[ "${panel:5:1}" == "x" ]]
then
panel=${panel:2:3}
else
panel=${panel:2:4}
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          RENICING SOME PROCESSES...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

### Phone dialer app ###
renice -1 `pidof com.android.phone`

### System apps ###
renice -1 `pidof com.android.mms` # Text message app
renice -1 `pidof com.swype.android.inputmethod` # Keyboard
renice -1 `pidof com.sec.android.app.controlpanel` # Task manager
renice -1 `pidof com.android.systemui` # System UI
renice -1 `pidof com.android.settings` # Settings menu
renice -1 `pidof com.android.vending` # Market app
renice -1 `pidof com.sec.android.app.camera` # Camera app
renice -1 `pidof android.process.acore`
renice -1 `pidof kondemand/0`
renice -1 `pidof ksmartass_up/0`

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING BATTERY SAVER...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable battery saver
for bs in /sys/module/battery_saver/parameters/
do
if [[ -d "/sys/module/battery_saver" ]]
then
write "${bs}enabled" "N"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ARCH POWER...                                                                                "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable arch power
if [[ -e "/sys/kernel/sched/arch_power" ]] 
then
write "/sys/kernel/sched/arch_power" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LPM SLEEP...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
  
# Disable LPM in gaming profile / performance profile
for lpm in /sys/module/lpm_levels/parameters/
do
if [[ -d "/sys/module/lpm_levels" ]]
then
write "${lpm}sleep_disabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu0/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu1/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu2/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu3/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu4/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu5/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu6/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu7/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-dynret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/perf-l2-dynret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/perf-l2-ret/idle_enabled" "N"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING PM2 IDLE SLEEP MODE...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/pm2/parameters/idle_sleep_mode" ]] 
then
write "/sys/module/pm2/parameters/idle_sleep_mode" "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LCD POWER REDUCE..                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/class/lcd/panel/power_reduce" ]] 
then
write "/sys/class/lcd/panel/power_reduce" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING GENTLE FAIR SLEEPERS...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/kernel/sched/gentle_fair_sleepers" ]]
then
write "/sys/kernel/sched/gentle_fair_sleepers" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FORCE FAST CHARGING...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable Fast Charging Rate
for ffc in /sys/kernel/fast_charge/
do
if [[ -e "/sys/kernel/fast_charge/force_fast_charge" ]]
then
write "${ffc}force_fast_charge" "1"
fi
done
  
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          KILLING GMS PROCESSES...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# GMS blocker 1.2 by @pedroginkgo
killall -9 com.google.android.gms
killall -9 com.google.android.gms.persistent
killall -9 com.google.process.gapps
killall -9 com.google.android.gsf
killall -9 com.google.android.gsf.persistent

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          $kts_profile PROFILE APPLIED WITH SUCCESS.                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          END OF EXECUTION: $(date)                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
exit=$(date +%s)

exectime=$((exit - init))
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          EXECUTION DONE IN $exectime SECONDS.                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
vibrate_cmode
};;
    # Battery Profile
        "BATTERY") {
        	init=$(date +%s)
kmsg1 "----------------------------------------------------- Info -------------------------------------------------------------------------------------------------"
kmsg1 "                                            üïõ Date of execution: $(date)                                                                                   "
kmsg1 "                                            üîß Kernel: `uname -a`                                                                                           "
kmsg1 "                                            üõ†Ô∏è SOC: $(getprop ro.board.platform)                                                                            "
kmsg1 "                                            ‚öôÔ∏è SDK: $(getprop ro.build.version.sdk)                                                                         "
kmsg1 "                                            üÖ∞Ô∏èndroid Version: $(getprop ro.build.version.release)                                                           "
kmsg1 "                                            üì± Device: $(getprop ro.product.odm.model)                                                                      "
kmsg1 "                                            üëë KTS Version: 1.8.5                                                                                           "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------------------"

	kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	kmsg1 "                                          ENABLING $kts_profile PROFILE...                                                                       "
	kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING THERMAL-ENGINE AND PERFD...                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
    	
# Enable throttling and perfd.
start thermal-engine
start perfd
    
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING I/O SCHEDULER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# I/O Scheduler Tweaks.
for queue in /sys/block/*/queue/
do
avail_scheds="$(cat "${queue}scheduler")"
for sched in cfq noop zen anxiety deadline kyber bfq bfq-sq mq-deadline none
do
if [[ "$avail_scheds" == *"$sched"* ]]
then
write "${queue}scheduler" "$sched"
break
fi
done
write "${queue}add_random" 0
write "${queue}iostats" 0
write "${queue}read_ahead_kb" 128
write "${queue}iosched/low_latency" 1
write "${queue}nomerges" 1
write "${queue}rq_affinity" 2
write "${queue}nr_requests" 64
done

# Reserve 90% IO bandwith for foreground tasks
if [[ -d "/dev/blkio" ]]
then
write "/dev/blkio/blkio.weight" "1000"
write "/dev/blkio/blkio.leaf_weight" "1000"
write "/dev/blkio/background/blkio.weight" "100"
write "/dev/blkio/background/blkio.leaf_weight" "100"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         TWEAKING CPU...                                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# CPU Tweaks
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/
do
avail_govs=`cat "${cpu}scaling_available_governors"`
if [[ "$avail_govs" == *"schedutil"* ]]
then
write "${cpu}scaling_governor" schedutil
write "${cpu}schedutil/up_rate_limit_us" "$((SCHED_PERIOD / 1000))"
write "${cpu}schedutil/down_rate_limit_us" "$((4 * SCHED_PERIOD / 1000))"
write "${cpu}schedutil/iowait_boost_enable" "0"
write "${cpu}schedutil/rate_limit_us" "$((SCHED_PERIOD / 1000))"
write "${cpu}schedutil/hispeed_load" "99"
write "${cpu}schedutil/hispeed_freq" "$UINT_MAX"
elif [[ "$avail_govs" == *"interactive"* ]]
then
write "${cpu}scaling_governor" interactive
write "${cpu}interactive/timer_rate" "$((SCHED_PERIOD / 1000))"
write "${cpu}interactive/timer_slack" "-1"
write "${cpu}interactive/boost" "0"
write "${cpu}interactive/use_migration_notif" "1" 
write "${cpu}interactive/use_sched_load" "1"
write "${cpu}interactive/boostpulse" "0"
write "${cpu}interactive/fastlane" "1"
write "${cpu}interactive/fast_ramp_down" "0"
write "${cpu}interactive/sampling_rate" "10000"
write "${cpu}interactive/sampling_rate_min" "10000"
write "${cpu}interactive/min_sample_time" "$((SCHED_PERIOD / 1000))"
write "${cpu}interactive/go_hispeed_load" "99"
write "${cpu}interactive/hispeed_freq" "$UINT_MAX"
fi
done

if [[ $percentage -le "20" ]]
then
write "/sys/devices/system/cpu/cpu1/online" "0"
write "/sys/devices/system/cpu/cpu2/online" "0"
write "/sys/devices/system/cpu/cpu5/online" "0"
write "/sys/devices/system/cpu/cpu6/online" "0"

else [[ $percentage -ge "20" ]]
write "/sys/devices/system/cpu/cpu1/online" "1"
write "/sys/devices/system/cpu/cpu2/online" "1"
write "/sys/devices/system/cpu/cpu5/online" "1"
write "/sys/devices/system/cpu/cpu6/online" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING GPU...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	
# GPU Tweaks
for gpu in /sys/class/kgsl/kgsl-3d0/
do
if [[ -d "/sys/class/kgsl/kgsl-3d0" ]]
then
write "${gpu}throttling" "1"
write "${gpu}thermal_pwrlevel" "3"
write "${gpu}devfreq/adrenoboost" "0"
write "${gpu}force_no_nap" "0"
write "${gpu}bus_split" "1"
write "${gpu}devfreq/min_freq" "100000000"
write "${gpu}default_pwrlevel" `cat /sys/class/kgsl/kgsl-3d0/min_pwrlevel`
write "${gpu}force_bus_on" "0"
write "${gpu}force_clk_on" "0"
write "${gpu}force_rail_on" "0"
write "${gpu}devfreq/polling_interval" "26"
write "${gpu}idle_timer" "36"
fi
done

if [[ -e "/proc/gpufreq/gpufreq_limited_thermal_ignore" ]] 
then
write "/proc/gpufreq/gpufreq_limited_thermal_ignore" "0"
fi

# Enable dvfs
if [[ -e "/proc/mali/dvfs_enable" ]] 
then
write "/proc/mali/dvfs_enable" "1"
fi

if [[ -e "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" ]] 
then
write "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" "1"
fi

if [[ -e "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" ]]
then
write "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" "1"
fi

# Set max clock to 600 mhz in battery profile if battery < than 20% and 745 mhz if > 20%.
for gpu in /sys/class/kgsl/kgsl-3d0/
do
if [[ $percentage -le "50" && -e "${gpu}devfreq/max_freq" ]]
then
write "${gpu}devfreq/max_freq" "600000000"

else [[ $percentage -ge "50" && -e "${gpu}devfreq/max_freq" ]]
write "${gpu}devfreq/max_freq" "745000000"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING AND TWEAKING ADRENO IDLER...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable and tweak adreno idler
if [[ -d "/sys/module/adreno_idler" ]]
then
write "/sys/module/adreno_idler/parameters/adreno_idler_active" "Y"
write "/sys/module/adreno_idler/parameters/adreno_idler_idleworkload" "10000"
write "/sys/module/adreno_idler/parameters/adreno_idler_downdifferential" "35"
write "/sys/module/adreno_idler/parameters/adreno_idler_idlewait" "25"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING LMK...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Low Memory Killer tweaks
for lmk in /sys/module/lowmemorykiller/parameters/
do
if [[ -d "/sys/module/lowmemorykiller" ]]
then
write "${lmk}enable_lmk" "1"
write "${lmk}enable_adaptive_lmk" "0"
write "${lmk}minfree" "21816,29088,36360,43632,50904,65448"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING DEBUGGERS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable debuggers.
for bl in /sys/module/bluetooth/parameters/
do
if [[ -e "${bl}disable_ertm" ]]
then
write "${bl}disable_ertm" "Y"
write "${bl}disable_esco" "Y"
fi
done

write "/sys/module/earlysuspend/parameters/debug_mask" "0"
write "/sys/module/alarm/parameters/debug_mask" "0"
write "/sys/module/alarm_dev/parameters/debug_mask" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/devices/system/edac/cpu/log_ce" "0"
write "/sys/devices/system/edac/cpu/log_ue" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/module/debug/parameters/enable_event_log" "0"
write "/sys/module/dwc3/parameters/ep_addr_rxdbg_mask" "0"
write "/sys/module/dwc3/parameters/ep_addr_txdbg_mask" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ce" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ue" "0"
write "/sys/module/glink/parameters/debug_mask" "0"
write "/sys/module/hid_apple/parameters/fnmode" "0"
write "/sys/module/hid_magicmouse/parameters/emulate_3button" "N"
write "/sys/module/hid_magicmouse/parameters/emulate_scroll_wheel" "N"
write "/sys/module/ip6_tunnel/parameters/log_ecn_error" "N"
write "/sys/module/lowmemorykiller/parameters/debug_level" "0"
write "/sys/module/mdss_fb/parameters/backlight_dimmer" "N"
write "/sys/module/msm_show_resume_irq/parameters/debug_mask" "0"
write "/sys/module/msm_smd/parameters/debug_mask" "0"
write "/sys/module/msm_smem/parameters/debug_mask" "0"
write "/sys/module/otg_wakelock/parameters/enabled" "N" 
write "/sys/module/service_locator/parameters/enable" "0"
write "/sys/module/sit/parameters/log_ecn_error" "N"
write "/sys/module/smem_log/parameters/log_enable" "0"
write "/sys/module/smp2p/parameters/debug_mask" "0"
write "/sys/module/touch_core_base/parameters/debug_mask" "0"
write "/sys/module/usb_bam/parameters/enable_event_log" "0"
write "/sys/module/printk/parameters/console_suspend" "Y"
write "/proc/sys/debug/exception-trace" "0"
write "/proc/sys/kernel/printk" "0 0 0 0"
write "/proc/sys/kernel/compat-log" "0"

if [ -e /sys/module/logger/parameters/log_mode ]
then
write "/sys/module/logger/parameters/log_mode" "2"
fi

if [ -e /sys/module/printk/parameters/console_suspend ] 
then
write "/sys/module/printk/parameters/console_suspend" "Y"
fi

for i in $(find /sys/ -name debug_mask)
do
write "$i" "0"
done

for i in $(find /sys/ -name debug_level)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ce)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ue)
do
write "$i" "0"
done

for i in $(find /sys/ -name enable_event_log) 
do
write "$i" "0"
done

for i in $(find /sys/ -name log_ecn_error)
do
write "$i" "N"
done

for i in $(find /sys/ -name snapshot_crashdumper)
do
write "$i" "0"
done

if [[ -e "/sys/module/ext4/parameters/mballoc_debug" ]] 
then
write "/sys/module/ext4/parameters/mballoc_debug" "0"
fi

# =========
# FIX DEEPSLEEP
# =========
for i in $(ls /sys/class/scsi_disk/)
do
lock_val 'temporary none' '/sys/class/scsi_disk/$i/cache_type'
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDTUNE TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Schedtune tweaks
for st in /dev/stune
do
if [[ -d "/dev/stune" ]]
then
write "${st}/background/schedtune.boost" "0"
write "${st}/background/schedtune.prefer_idle" "0"

write "${st}/foreground/schedtune.boost" "1"
write "${st}/foreground/schedtune.prefer_idle" "0"

write "${st}/rt/schedtune.boost" "0"
write "${st}/rt/schedtune.prefer_idle" "0"

write "${st}/top-app/schedtune.boost" "1"
write "${st}/top-app/schedtune.prefer_idle" "0"

write "${st}/schedtune.boost" "0"
write "${st}/schedtune.prefer_idle" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING FS TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# FS Tweaks.
for fs in /proc/sys/fs/
do
if [[ -d "/proc/sys/fs" ]]
then
write "${fs}dir-notify-enable" "0"
write "${fs}lease-break-time" "20"
write "${fs}leases-enable" "1"
fi
done
    
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING DYNAMIC FSYNC...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable dynamic_fsync.
if [[ -e "/sys/kernel/dyn_fsync/Dyn_fsync_active" ]]
then
chmod 666 /sys/kernel/dyn_fsync/Dyn_fsync_active
chown root /sys/kernel/dyn_fsync/Dyn_fsync_active
write "/sys/kernel/dyn_fsync/Dyn_fsync_active" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDULER TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Scheduler features.
for sched in /sys/kernel/debug/
do
if [[ -e "/sys/kernel/debug/sched_features" ]]
then
write "${sched}sched_features" "NEXT_BUDDY"
write "${sched}sched_features" "TTWU_QUEUE"
write "${sched}sched_features" "NO_WAKEUP_PREEMPTION"
write "${sched}sched_features" "NO_GENTLE_FAIR_SLEEPERS"
write "${sched}sched_features" "ARCH_POWER" 
fi
done
	
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ONEPLUS CHAIN...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# OP Tweaks
for opc in /sys/module/opchain/parameters/
do
if [[ -d "/sys/module/opchain" ]]
then
write "${opc}chain_on" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING KERNEL SETTINGS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Tweak some kernel settings to improve overall performance.
for kts in /proc/sys/kernel/
do
write "${kts}sched_child_runs_first" "1"
write "${kts}perf_cpu_time_max_percent" "5"
write "${kts}sched_autogroup_enabled" "1"
write "${kts}random/read_wakeup_threshold" "64"
write "${kts}random/write_wakeup_threshold" "128"
write "${kts}random/urandom_min_reseed_secs" "90"
write "${kts}sched_tunable_scaling" "0"
write "${kts}sched_latency_ns" "$SCHED_PERIOD"
write "${kts}sched_min_granularity_ns" "$((SCHED_PERIOD / SCHED_TASKS))"
write "${kts}sched_wakeup_granularity_ns" "$((SCHED_PERIOD / 2))"
write "${kts}sched_migration_cost_ns" "5000000"
write "${kts}sched_min_task_util_for_colocation" "0"
write "${kts}sched_nr_migrate" "8"
write "${kts}sched_schedstats" "0"
write "${kts}printk_devkmsg" "off"
done

# Use RCU_normal instead of RCU_expedited for improved real-time latency, CPU utilization and energy efficiency.
if [[ -e "/sys/kernel/rcu_expedited" ]]
then
write /sys/kernel/rcu_expedited 0
write /sys/kernel/rcu_normal 1
fi

if [[ -e "/sys/power/pm_freeze_timeout" ]] 
then
write "/sys/power/pm_freeze_timeout" "2500"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FINGERPRINT BOOST...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable fingerprint boost.
if [[ -e "/sys/kernel/fp_boost/enabled" ]]
then
write "/sys/kernel/fp_boost/enabled" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          SETTING MIN AND MAX CPU FREQUENCY...                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Set min and max clocks.
for minclk in /sys/devices/system/cpu/cpufreq/policy*/
do
if [[ $percentage -le "20" && -e "${minclk}scaling_min_freq" ]]
then
write "${minclk}scaling_min_freq" "300000"
write "${minclk}scaling_max_freq" "20000000"

else [[ $percentage -ge "20" && -e "${minclk}scaling_min_freq" ]]
write "${minclk}scaling_min_freq" "300000"
write "${minclk}scaling_max_freq" "1600000"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING CPUIDLE USE DEEPEST STATE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/devices/system/cpu/cpuidle/use_deepest_state" ]] 
then
write "/sys/devices/system/cpu/cpuidle/use_deepest_state" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING KRAIT VOLTAGE BOOST...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable krait voltage boost
if [[ -e "/sys/module/acpuclock_krait/parameters/boost" ]] 
then
write "/sys/module/acpuclock_krait/parameters/boost" "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING VM TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

sync

# VM settings to improve overall user experience and performance.
for vm in /proc/sys/vm/
do
write "${vm}drop_caches" "3"
write "${vm}dirty_background_ratio" "10"
write "${vm}dirty_ratio" "30"
write "${vm}dirty_expire_centisecs" "5000"
write "${vm}dirty_writeback_centisecs" "5000"
write "${vm}page-cluster" "0"
write "${vm}stat_interval" "30"
write "${vm}swap_ratio_enable" "1"
write "${vm}swap_ratio" "100"
write "${vm}swappiness" "100"
write "${vm}vfs_cache_pressure" "20"
write "/sys/module/process_reclaim/parameters/enable_process_reclaim" "0"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING KSM...                                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable KSM
if [[ -e "/sys/kernel/mm/ksm/run" ]] 
then
write "/sys/kernel/mm/ksm/run" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING UKSM...                                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable UKSM
if [[ -e "/sys/kernel/mm/uksm/run" ]] 
then
write "/sys/kernel/mm/uksm/run" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING MSM THERMAL SETTINGS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# MSM thermal
if [[ -d "/sys/module/msm_thermal" ]]
then
write /sys/module/msm_thermal/vdd_restriction/enabled "1"
write /sys/module/msm_thermal/core_control/enabled "1"
write /sys/module/msm_thermal/parameters/enabled "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING POWER EFFICIENT WORKQUEUE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Workqueue enable power_efficient.
for wqpw in /sys/module/workqueue/parameters/
do
if [[ -e "${wqpw}power_efficient" ]]
then 
write "${wqpw}power_efficient" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          FIXING DOUBLE TAP TO WAKEUP...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Fix DT2W
for dt in /sys/touchpanel/
do
if [[ -e "/sys/touchpanel/double_tap" ]]
then
write "${dt}double_tap" "1"
fi
done

if [[ -e "/proc/tp_gesture" ]]
then
write "/proc/tp_gesture" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING MSM TOUCH BOOST...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable touch boost on battery and balance profile.
if [[ -e /sys/module/msm_performance/parameters/touchboost ]]
then
write "/sys/module/msm_performance/parameters/touchboost" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING INTERNET TWEAKS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Internet Tweaks
for tcp in /proc/sys/net/ipv4/
do
write "${tcp}ip_no_pmtu_disc" "0"
write "${tcp}tcp_ecn" "2"
write "${tcp}tcp_timestamps" "0"
write "${tcp}route.flush" "1"
write "${tcp}tcp_rfc1337" "1"
write "${tcp}tcp_tw_reuse" "1"
write "${tcp}tcp_sack" "1"
write "${tcp}tcp_fack" "1"
write "${tcp}tcp_fastopen" "3"
write "${tcp}tcp_tw_recycle" "1"
write "${tcp}tcp_syncookies" "0"
write "${tcp}tcp_window_scaling" "1"
write "${tcp}tcp_keepalive_probes" "10"
write "${tcp}tcp_keepalive_intvl" "30"
write "${tcp}tcp_fin_timeout" "30"
write "${tcp}tcp_low_latency" "1"
write "${tcp}tcp_congestion_control" "bbr2"
done

# Tweak and decrease tx_queue_len default stock value(s) for less amount of generated bufferbloat and for gaining slightly faster network speed and performance;
for i in $(find /sys/class/net -type l)
do
write "$i/tx_queue_len" "128"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         CALIBRATING TOUCH...                                                                                    "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Touch calibration
panel=$(cat /sys/class/graphics/fb0/modes)
if [[ "${panel:5:1}" == "x" ]]
then
panel=${panel:2:3}
else
panel=${panel:2:4}
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          RENICING SOME PROCESSES...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

### Phone dialer app ###
renice -1 `pidof com.android.phone`

### System apps ###
renice -1 `pidof com.android.mms` # Text message app
renice -1 `pidof com.swype.android.inputmethod` # Keyboard
renice -1 `pidof com.sec.android.app.controlpanel` # Task manager
renice -1 `pidof com.android.systemui` # System UI
renice -1 `pidof com.android.settings` # Settings menu
renice -1 `pidof com.android.vending` # Market app
renice -1 `pidof com.sec.android.app.camera` # Camera app
renice -1 `pidof android.process.acore`
renice -1 `pidof kondemand/0`
renice -1 `pidof ksmartass_up/0`

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING BATTERY SAVER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable battery saver
for bs in /sys/module/battery_saver/parameters/
do
if [[ -d "/sys/module/battery_saver" ]]
then
write "${bs}enabled" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING LPM SLEEP...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable LPM in battery / balanced profile
for lpm in /sys/module/lpm_levels/parameters/
do
if [[ -d "/sys/module/lpm_levels" ]]
then
write "${lpm}sleep_disabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu0/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu1/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu2/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu3/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu4/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu5/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu6/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu7/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-dynret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/perf-l2-dynret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/perf-l2-ret/idle_enabled" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING LCD POWER REDUCE...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/class/lcd/panel/power_reduce" ]] 
then
write "/sys/class/lcd/panel/power_reduce" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING GENTLE FAIR SLEEPERS...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/kernel/sched/gentle_fair_sleepers" ]]
then
write "/sys/kernel/sched/gentle_fair_sleepers" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FORCE FAST CHARGING...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable Fast Charging Rate
for ffc in /sys/kernel/fast_charge/
do
if [[ -e "/sys/kernel/fast_charge/force_fast_charge" ]]
then
write "${ffc}force_fast_charge" "1"
fi
done
  
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          KILLING GMS PROCESSES...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# GMS blocker 1.2 by @pedroginkgo
killall -9 com.google.android.gms
killall -9 com.google.android.gms.persistent
killall -9 com.google.process.gapps
killall -9 com.google.android.gsf
killall -9 com.google.android.gsf.persistent

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          $kts_profile PROFILE APPLIED WITH SUCCESS.                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          END OF EXECUTION: $(date)                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
exit=$(date +%s)

exectime=$((exit - init))
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          EXECUTION DONE IN $exectime SECONDS.                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
vibrate_cmode
};;
    # Gaming Profile
        "GAMING") {
        	init=$(date +%s)
kmsg1 "----------------------------------------------------- Info -------------------------------------------------------------------------------------------------"
kmsg1 "                                            üïõ Date of execution: $(date)                                                                                   "
kmsg1 "                                            üîß Kernel: `uname -a`                                                                                           "
kmsg1 "                                            üõ†Ô∏è SOC: $(getprop ro.board.platform)                                                                            "
kmsg1 "                                            ‚öôÔ∏è SDK: $(getprop ro.build.version.sdk)                                                                         "
kmsg1 "                                            üÖ∞Ô∏èndroid Version: $(getprop ro.build.version.release)                                                           "
kmsg1 "                                            üì± Device: $(getprop ro.product.odm.model)                                                                      "
kmsg1 "                                            üëë KTS Version: 1.8.5                                                                                           "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------------------"

	kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	kmsg1 "                                          ENABLING $kts_profile PROFILE...                                                                       "
	kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
		
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING THERMAL-ENGINE AND PERFD...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable throttling and perfd.
stop thermal-engine
stop perfd

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING CPU INPUT BOOST...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Caf CPU Boost
for caf in /sys/module/cpu_boost/parameters/
do
if [[ -d "/sys/module/cpu_boost" ]]
then
write "${caf}input_boost_freq" "0:$UINT_MAX 1:$UINT_MAX 2:$UINT_MAX 3:$UINT_MAX 4:$UINT_MAX 5:$UINT_MAX 6:$UINT_MAX 7:$UINT_MAX"
write "${caf}input_boost_ms" "64"
fi
done

# CPU Boost
for cib in /sys/module/cpu_input_boost/parameters/
do
if [[ -d "/sys/module/cpu_input_boost" ]]
then
write "${cib}input_boost_duration" "64"
write "${cib}input_boost_freq_hp" "$UINT_MAX"
write "${cib}input_boost_freq_lp" "$UINT_MAX"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING I/O SCHEDULER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# I/O Scheduler Tweaks.
for queue in /sys/block/*/queue/
do
avail_scheds="$(cat "${queue}scheduler")"
for sched in cfq noop zen anxiety deadline kyber bfq bfq-sq mq-deadline none
do
if [[ "$avail_scheds" == *"$sched"* ]]
then
write "${queue}scheduler" "$sched"
break
fi
done
write "${queue}add_random" 0
write "${queue}iostats" 0
write "${queue}read_ahead_kb" 512
write "${queue}iosched/low_latency" 0
write "${queue}nomerges" 1
write "${queue}rq_affinity" 2
write "${queue}nr_requests" 64
done

# Reserve 90% IO bandwith for foreground tasks
if [[ -d "/dev/blkio" ]]
then
write "/dev/blkio/blkio.weight" "1000"
write "/dev/blkio/blkio.leaf_weight" "1000"
write "/dev/blkio/background/blkio.weight" "100"
write "/dev/blkio/background/blkio.leaf_weight" "100"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         TWEAKING CPU...                                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# CPU Tweaks
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/
do
avail_govs=`cat "${cpu}scaling_available_governors"`
if [[ "$avail_govs" == *"schedutil"* ]]
then
write "${cpu}scaling_governor" schedutil
write "${cpu}schedutil/up_rate_limit_us" "$((SCHED_PERIOD / 1000))"
write "${cpu}schedutil/down_rate_limit_us" "$((4 * SCHED_PERIOD / 1000))"
write "${cpu}schedutil/iowait_boost_enable" "0"
write "${cpu}schedutil/rate_limit_us" "$((SCHED_PERIOD / 1000))"
write "${cpu}schedutil/hispeed_load" "80"
write "${cpu}schedutil/hispeed_freq" "$UINT_MAX"
elif [[ "$avail_govs" == *"interactive"* ]]
then
write "${cpu}scaling_governor" interactive
write "${cpu}interactive/timer_rate" "$((SCHED_PERIOD / 1000))"
write "${cpu}interactive/timer_slack" "-1"
write "${cpu}interactive/boost" "1"
write "${cpu}interactive/boostpulse" "1"
write "${cpu}interactive/boostpulse_duration" "640000"
write "${cpu}interactive/fast_ramp_down" "1"
write "${cpu}interactive/sampling_rate" "5000"
write "${cpu}interactive/sampling_rate_min" "5000"
write "${cpu}interactive/min_sample_time" "$((SCHED_PERIOD / 1000))"
write "${cpu}interactive/go_hispeed_load" "80"
write "${cpu}interactive/hispeed_freq" "$UINT_MAX"
fi
done

write "/sys/devices/system/cpu/cpu1/online" "1"
write "/sys/devices/system/cpu/cpu2/online" "1"
write "/sys/devices/system/cpu/cpu5/online" "1"
write "/sys/devices/system/cpu/cpu6/online" "1"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING GPU...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	
# GPU Tweaks.
for gpu in /sys/class/kgsl/kgsl-3d0/
do
if [[ -d "/sys/class/kgsl/kgsl-3d0" ]]
then
write "${gpu}throttling" "0"
write "${gpu}thermal_pwrlevel" "0"
write "${gpu}devfreq/adrenoboost" "3"
write "${gpu}force_no_nap" "1"
write "${gpu}bus_split" "0"
write "${gpu}devfreq/min_freq" "$UINT_MAX"
write "${gpu}devfreq/max_freq" "$UINT_MAX"
write "${gpu}default_pwrlevel" `cat /sys/class/kgsl/kgsl-3d0/max_pwrlevel`
write "${gpu}force_bus_on" "1"
write "${gpu}force_clk_on" "1"
write "${gpu}force_rail_on" "1"
write "${gpu}devfreq/polling_interval" "5"
write "${gpu}idle_timer" "10000000"
fi
done

if [[ -e "/proc/gpufreq/gpufreq_limited_thermal_ignore" ]]
then
write "/proc/gpufreq/gpufreq_limited_thermal_ignore" "1"
fi

# Enable dvfs
if [[ -e "/proc/mali/dvfs_enable" ]] 
then
write "/proc/mali/dvfs_enable" "1"
fi

if [[ -e "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" ]] 
then
write "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" "1"
fi

if [[ -e "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" ]]
then
write "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING AND TWEAKING ADRENO IDLER...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable and tweak adreno idler
if [[ -d "/sys/module/adreno_idler" ]]
then
write "/sys/module/adreno_idler/parameters/adreno_idler_active" "Y"
write "/sys/module/adreno_idler/parameters/adreno_idler_idleworkload" "5000"
write "/sys/module/adreno_idler/parameters/adreno_idler_downdifferential" "10"
write "/sys/module/adreno_idler/parameters/adreno_idler_idlewait" "15"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                             TWEAKING LMK...                                                                                     "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Low Memory Killer Tweaks.
for lmk in /sys/module/lowmemorykiller/parameters/
do
if [[ -d "/sys/module/lowmemorykiller" ]]
then
write "${lmk}enable_lmk" "1"
write "${lmk}enable_adaptive_lmk" "0"
write "${lmk}minfree" "21816,29088,36360,43632,50904,65448"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING DEBUGGERS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable debuggers.
for bl in /sys/module/bluetooth/parameters/
do
if [[ -e "${bl}disable_ertm" ]]
then
write "${bl}disable_ertm" "Y"
write "${bl}disable_esco" "Y"
fi
done

write "/sys/module/earlysuspend/parameters/debug_mask" "0"
write "/sys/module/alarm/parameters/debug_mask" "0"
write "/sys/module/alarm_dev/parameters/debug_mask" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/devices/system/edac/cpu/log_ce" "0"
write "/sys/devices/system/edac/cpu/log_ue" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/module/debug/parameters/enable_event_log" "0"
write "/sys/module/dwc3/parameters/ep_addr_rxdbg_mask" "0"
write "/sys/module/dwc3/parameters/ep_addr_txdbg_mask" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ce" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ue" "0"
write "/sys/module/glink/parameters/debug_mask" "0"
write "/sys/module/hid_apple/parameters/fnmode" "0"
write "/sys/module/hid_magicmouse/parameters/emulate_3button" "N"
write "/sys/module/hid_magicmouse/parameters/emulate_scroll_wheel" "N"
write "/sys/module/ip6_tunnel/parameters/log_ecn_error" "N"
write "/sys/module/lowmemorykiller/parameters/debug_level" "0"
write "/sys/module/mdss_fb/parameters/backlight_dimmer" "N"
write "/sys/module/msm_show_resume_irq/parameters/debug_mask" "0"
write "/sys/module/msm_smd/parameters/debug_mask" "0"
write "/sys/module/msm_smem/parameters/debug_mask" "0"
write "/sys/module/otg_wakelock/parameters/enabled" "N" 
write "/sys/module/service_locator/parameters/enable" "0"
write "/sys/module/sit/parameters/log_ecn_error" "N"
write "/sys/module/smem_log/parameters/log_enable" "0"
write "/sys/module/smp2p/parameters/debug_mask" "0"
write "/sys/module/touch_core_base/parameters/debug_mask" "0"
write "/sys/module/usb_bam/parameters/enable_event_log" "0"
write "/sys/module/printk/parameters/console_suspend" "Y"
write "/proc/sys/debug/exception-trace" "0"
write "/proc/sys/kernel/printk" "0 0 0 0"
write "/proc/sys/kernel/compat-log" "0"

if [ -e /sys/module/logger/parameters/log_mode ]
then
write "/sys/module/logger/parameters/log_mode" "2"
fi

if [ -e /sys/module/printk/parameters/console_suspend ] 
then
write "/sys/module/printk/parameters/console_suspend" "Y"
fi

for i in $(find /sys/ -name debug_mask)
do
write "$i" "0"
done

for i in $(find /sys/ -name debug_level)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ce)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ue)
do
write "$i" "0"
done

for i in $(find /sys/ -name enable_event_log) 
do
write "$i" "0"
done

for i in $(find /sys/ -name log_ecn_error)
do
write "$i" "N"
done

for i in $(find /sys/ -name snapshot_crashdumper)
do
write "$i" "0"
done

if [[ -e "/sys/module/ext4/parameters/mballoc_debug" ]] 
then
write "/sys/module/ext4/parameters/mballoc_debug" "0"
fi

# =========
# FIX DEEPSLEEP
# =========
for i in $(ls /sys/class/scsi_disk/)
do
lock_val 'temporary none' '/sys/class/scsi_disk/$i/cache_type'
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                            APPLYING SCHEDTUNE TWEAKS...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Schedtune Tweaks
for st in /dev/stune
do
if [[ -d "/dev/stune" ]]
then
write "${st}/background/schedtune.boost" "0"
write "${st}/background/schedtune.prefer_idle" "0"

write "${st}/foreground/schedtune.boost" "40"
write "${st}/foreground/schedtune.prefer_idle" "1"

write "${st}/rt/schedtune.boost" "0"
write "${st}/rt/schedtune.prefer_idle" "0"

write "${st}/top-app/schedtune.boost" "40"
write "${st}/top-app/schedtune.prefer_idle" "1"

write "${st}/schedtune.boost" "0"
write "${st}/schedtune.prefer_idle" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                            APPLYING FS TWEAKS...                                                                                "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# FS Tweaks.
for fs in /proc/sys/fs/
do
if [[ -d "/proc/sys/fs" ]]
then
write "${fs}dir-notify-enable" "0"
write "${fs}lease-break-time" "20"
write "${fs}leases-enable" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING DYNAMIC FSYNC...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable dynamic_fsync.
if [[ -e "/sys/kernel/dyn_fsync/Dyn_fsync_active" ]]
then
chmod 666 /sys/kernel/dyn_fsync/Dyn_fsync_active
chown root /sys/kernel/dyn_fsync/Dyn_fsync_active
write "/sys/kernel/dyn_fsync/Dyn_fsync_active" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDULER TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Scheduler features.
for sched in /sys/kernel/debug/
do
if [[ -e "/sys/kernel/debug/sched_features" ]]
then
write "${sched}sched_features" "NEXT_BUDDY"
write "${sched}sched_features" "TTWU_QUEUE"
write "${sched}sched_features" "NO_GENTLE_FAIR_SLEEPERS"
write "${sched}sched_features" "NO_WAKEUP_PREEMPTION"
fi
done
	
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ONEPLUS CHAIN...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# OP Tweaks
for opc in /sys/module/opchain/parameters/
do
if [[ -d "/sys/module/opchain" ]]
then
write "${opc}chain_on" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING KERNEL SETTINGS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Tweak some kernel settings to improve overall performance.
for kts in /proc/sys/kernel/
do
write "${kts}sched_child_runs_first" "1"
write "${kts}perf_cpu_time_max_percent" "5"
write "${kts}sched_autogroup_enabled" "1"
write "${kts}random/read_wakeup_threshold" "64"
write "${kts}random/write_wakeup_threshold" "896"
write "${kts}random/urandom_min_reseed_secs" "90"
write "${kts}sched_tunable_scaling" "0"
write "${kts}sched_latency_ns" "$SCHED_PERIOD"
write "${kts}sched_min_granularity_ns" "$((SCHED_PERIOD / SCHED_TASKS))"
write "${kts}sched_wakeup_granularity_ns" "$((SCHED_PERIOD / 2))"
write "${kts}sched_migration_cost_ns" "5000000"
write "${kts}sched_min_task_util_for_colocation" "0"
write "${kts}sched_nr_migrate" "8"
write "${kts}sched_schedstats" "0"
write "${kts}printk_devkmsg" "off"
done

# Use RCU_normal instead of RCU_expedited for improved real-time latency, CPU utilization and energy efficiency.
if [[ -e "/sys/kernel/rcu_expedited" ]]
then
write /sys/kernel/rcu_expedited 0
write /sys/kernel/rcu_normal 1
fi

if [[ -e "/sys/power/pm_freeze_timeout" ]] 
then
write "/sys/power/pm_freeze_timeout" "2500"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FINGERPRINT BOOST...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable fingerprint boost.
if [[ -e "/sys/kernel/fp_boost/enabled" ]]
then
write "/sys/kernel/fp_boost/enabled" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          SETTING MIN AND MAX CPU FREQUENCY...                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Set max clocks in gaming / performance profile.
for minclk in /sys/devices/system/cpu/cpufreq/policy*/
do
if [[ -e "${minclk}scaling_min_freq" ]]
then
write "${minclk}scaling_min_freq" "20000000"
write "${minclk}scaling_max_freq" "20000000"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING CPUIDLE USE DEEPEST STATE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/devices/system/cpu/cpuidle/use_deepest_state" ]] 
then
write "/sys/devices/system/cpu/cpuidle/use_deepest_state" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING KRAIT VOLTAGE BOOST...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable krait voltage boost
if [[ -e "/sys/module/acpuclock_krait/parameters/boost" ]] 
then
write "/sys/module/acpuclock_krait/parameters/boost" "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING VM TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

sync

# VM settings to improve overall user experience and performance.
for vm in /proc/sys/vm/
do
write "${vm}drop_caches" "3"
write "${vm}dirty_background_ratio" "5"
write "${vm}dirty_ratio" "10"
write "${vm}dirty_expire_centisecs" "1000"
write "${vm}dirty_writeback_centisecs" "550"
write "${vm}page-cluster" "0"
write "${vm}stat_interval" "60"
write "${vm}swappiness" "100"
write "${vm}swap_ratio_enable" "1"
write "${vm}swap_ratio" "100"
write "${vm}vfs_cache_pressure" "200"
write "/sys/module/process_reclaim/parameters/enable_process_reclaim" "0"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING MSM THERMAL SETTINGS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# MSM thermal
if [[ -d "/sys/module/msm_thermal" ]]
then
write /sys/module/msm_thermal/vdd_restriction/enabled "0"
write /sys/module/msm_thermal/core_control/enabled "0"
write /sys/module/msm_thermal/parameters/enabled "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING POWER EFFICIENT WORKQUEUE...                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Workqueue disable power_efficient.
for wqpw in /sys/module/workqueue/parameters/
do
if [[ -e "${wqpw}power_efficient" ]]
then 
write "${wqpw}power_efficient" "N" 
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          FIXING DOUBLE TAP TO WAKEUP...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Fix DT2W
for dt in /sys/touchpanel/
do
if [[ -e "/sys/touchpanel/double_tap" ]]
then
write "${dt}double_tap" "1"
fi
done

if [[ -e "/proc/tp_gesture" ]]
then
write "/proc/tp_gesture" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING MSM TOUCH BOOST...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable touch boost on gaming and performance profile.
if [[ -e /sys/module/msm_performance/parameters/touchboost ]]
then
write "/sys/module/msm_performance/parameters/touchboost" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING INTERNET TWEAKS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Internet Tweaks
for tcp in /proc/sys/net/ipv4/
do
write "${tcp}ip_no_pmtu_disc" "0"
write "${tcp}tcp_ecn" "2"
write "${tcp}tcp_timestamps" "0"
write "${tcp}route.flush" "1"
write "${tcp}tcp_rfc1337" "1"
write "${tcp}tcp_tw_reuse" "1"
write "${tcp}tcp_sack" "1"
write "${tcp}tcp_fack" "1"
write "${tcp}tcp_fastopen" "3"
write "${tcp}tcp_tw_recycle" "1"
write "${tcp}tcp_syncookies" "0"
write "${tcp}tcp_window_scaling" "1"
write "${tcp}tcp_keepalive_probes" "10"
write "${tcp}tcp_keepalive_intvl" "30"
write "${tcp}tcp_fin_timeout" "30"
write "${tcp}tcp_low_latency" "1"
write "${tcp}tcp_congestion_control" "bbr2"
done

# Tweak and decrease tx_queue_len default stock value(s) for less amount of generated bufferbloat and for gaining slightly faster network speed and performance;
for i in $(find /sys/class/net -type l)
do
write "$i/tx_queue_len" "128"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          CALIBRATING TOUCH...                                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Touch calibration
panel=$(cat /sys/class/graphics/fb0/modes)
if [[ "${panel:5:1}" == "x" ]]
then
panel=${panel:2:3}
else
panel=${panel:2:4}
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          RENICING SOME PROCESSES...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

### Phone dialer app ###
renice -1 `pidof com.android.phone`

### System apps ###
renice -1 `pidof com.android.mms` # Text message app
renice -1 `pidof com.swype.android.inputmethod` # Keyboard
renice -1 `pidof com.sec.android.app.controlpanel` # Task manager
renice -1 `pidof com.android.systemui` # System UI
renice -1 `pidof com.android.settings` # Settings menu
renice -1 `pidof com.android.vending` # Market app
renice -1 `pidof com.sec.android.app.camera` # Camera app
renice -1 `pidof android.process.acore`
renice -1 `pidof kondemand/0`
renice -1 `pidof ksmartass_up/0`

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING BATTERY SAVER...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable battery saver
for bs in /sys/module/battery_saver/parameters/
do
if [[ -d "/sys/module/battery_saver" ]]
then
write "${bs}enabled" "N"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ARCH POWER...                                                                                "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable arch power
if [[ -e "/sys/kernel/sched/arch_power" ]] 
then
write "/sys/kernel/sched/arch_power" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LPM SLEEP...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable LPM sleep on gaming profile / performance profile
for lpm in /sys/module/lpm_levels/parameters/
do
if [[ -d "/sys/module/lpm_levels" ]]
then
write "${lpm}sleep_disabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu0/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu1/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu2/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu3/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu4/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu5/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu6/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu7/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-dynret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/perf-l2-dynret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/perf-l2-ret/idle_enabled" "N"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING PM2 IDLE SLEEP MODE...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/pm2/parameters/idle_sleep_mode" ]] 
then
write "/sys/module/pm2/parameters/idle_sleep_mode" "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LCD POWER REDUCE...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/class/lcd/panel/power_reduce" ]] 
then
write "/sys/class/lcd/panel/power_reduce" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING GENTLE FAIR SLEEPERS...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/kernel/sched/gentle_fair_sleepers" ]]
then
write "/sys/kernel/sched/gentle_fair_sleepers" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         ENABLING FORCE FAST CHARGING...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable Fast Charging Rate
for ffc in /sys/kernel/fast_charge/
do
if [[ -e "/sys/kernel/fast_charge/force_fast_charge" ]]
then
write "${ffc}force_fast_charge" "1"
fi
done
  
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          KILLING GMS PROCESSES...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# GMS blocker 1.2 by pedrozzz
killall -9 com.google.android.gms
killall -9 com.google.android.gms.persistent
killall -9 com.google.process.gapps
killall -9 com.google.android.gsf
killall -9 com.google.android.gsf.persistent

kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          $kts_profile PROFILE APPLIED WITH SUCCESS.                                                            "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          END OF EXECUTION: $(date)                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
exit=$(date +%s)

exectime=$((exit - init))
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          EXECUTION DONE IN $exectime SECONDS.                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
vibrate_cmode
};;
esac
done
) &